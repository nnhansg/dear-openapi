openapi: 3.0.0
servers:
  - url: 'https://inventory.dearsystems.com/ExternalApi/v2'
info:
  title: DEAR Inventory API
  description: This specifing endpoints for DEAR Inventory API
  version: "2.0.0"
  termsOfService: "https://dearsystems.com/terms-and-conditions/"
  contact:
    name: "Nhan Nguyen"
    email: "nnhansg@gmail.com"
    url: "https://www.nhansg.com"
paths:
  /customer:
    get:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: getCustomers
      summary: Allows you to retrieve the customers
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/modifiedSince'
        - $ref: '#/components/parameters/includeDeprecated'
      responses:
        '200':
          description: Success - return response of type Customers array with 0 to n Customers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers'
              example: '{
                          "Total": 2,
                          "Page": 1,
                          "CustomerList": [
                            {
                              "ID": "0365e5bb-e5ea-4a45-b98b-fdc4466bdaf1",
                              "Name": "Human Test",
                              "Currency": "AUD",
                              "PaymentTerm": "30 days",
                              "Discount": 0,
                              "TaxRule": "BAS Excluded",
                              "Carrier": "DEFAULT Carrier",
                              "SalesRepresentative": nil,
                              "Location": "Main Warehouse",
                              "Comments": "",
                              "AccountReceivable": "610",
                              "RevenueAccount": "200",
                              "PriceTier": "Tier 1",
                              "TaxNumber": "",
                              "AdditionalAttribute1": "",
                              "AdditionalAttribute2": "",
                              "AdditionalAttribute3": "",
                              "AdditionalAttribute4": "",
                              "AdditionalAttribute5": "",
                              "AdditionalAttribute6": "",
                              "AdditionalAttribute7": "",
                              "AdditionalAttribute8": "",
                              "AdditionalAttribute9": "",
                              "AdditionalAttribute10": "",
                              "AttributeSet": nil,
                              "Tags": "",
                              "Status": "Active",
                              "CreditLimit": 0,
                              "IsOnCreditHold": false,
                              "LastModifiedOn": "2018-01-24T05:07:23.917Z",
                              "Addresses": [
                                {
                                  "Line1": "P O Box 456",
                                  "Line2": "Southbank",
                                  "City": "Melbourne GPO",
                                  "State": "VIC",
                                  "Postcode": "3331",
                                  "Country": nil,
                                  "Type": "Billing",
                                  "DefaultForType": true,
                                  "ID": "fc8ca28e-7f91-4ac3-8fff-deb86395b494"
                                }
                              ],
                              "Contacts": [
                                {
                                  "Name": "Nick Wakefield",
                                  "JobTitle": nil,
                                  "Phone": "03 3014556",
                                  "MobilePhone": nil,
                                  "Fax": nil,
                                  "Email": nil,
                                  "Website": nil,
                                  "Default": true,
                                  "Comment": nil,
                                  "IncludeInEmail": false,
                                  "ID": "c650db26-2fca-4fe4-837d-ffd0f4d97200"
                                }
                              ]
                            },
                            {
                              "ID": "861918cc-81f9-4701-9639-864c796561cf",
                              "Name": "Customer Test",
                              "Currency": "AUD",
                              "PaymentTerm": "30 days",
                              "Discount": 0,
                              "TaxRule": "GST Free Exports",
                              "Carrier": nil,
                              "SalesRepresentative": nil,
                              "Location": "Main Warehouse",
                              "Comments": nil,
                              "AccountReceivable": "610",
                              "RevenueAccount": "200",
                              "PriceTier": "Tier 1",
                              "TaxNumber": nil,
                              "AdditionalAttribute1": nil,
                              "AdditionalAttribute2": nil,
                              "AdditionalAttribute3": nil,
                              "AdditionalAttribute4": nil,
                              "AdditionalAttribute5": nil,
                              "AdditionalAttribute6": nil,
                              "AdditionalAttribute7": nil,
                              "AdditionalAttribute8": nil,
                              "AdditionalAttribute9": nil,
                              "AdditionalAttribute10": nil,
                              "AttributeSet": nil,
                              "Tags": nil,
                              "Status": "Active",
                              "CreditLimit": 0,
                              "IsOnCreditHold": false,
                              "LastModifiedOn": "2018-01-30T06:07:43.46Z",
                              "Addresses": [],
                              "Contacts": [
                                {
                                  "Name": "Customer Test",
                                  "JobTitle": nil,
                                  "Phone": nil,
                                  "MobilePhone": nil,
                                  "Fax": nil,
                                  "Email": "Customer@mail.ru",
                                  "Website": nil,
                                  "Default": true,
                                  "Comment": nil,
                                  "IncludeInEmail": false,
                                  "ID": "23ef723b-75b5-43b3-8ee7-56d193e53923"
                                }
                              ]
                            }
                          ]
                        }'
    post:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: createCustomer
      summary: Allows you to create a customer
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      requestBody:
        description: a customer object with properties to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
            example: '{
                        "Name": "DIISR - Small Business Services customer",
                        "Currency": "AUD",
                        "PaymentTerm": "30 days",
                        "Discount": 0,
                        "TaxRule": "GST Free Exports",
                        "Carrier": "DEFAULT Carrier",
                        "SalesRepresentative": nil,
                        "Location": "Main Warehouse",
                        "Comments": nil,
                        "AccountReceivable": "610",
                        "RevenueAccount": "200",
                        "PriceTier": "Tier 1",
                        "TaxNumber": nil,
                        "AdditionalAttribute1": nil,
                        "AdditionalAttribute2": nil,
                        "AdditionalAttribute3": nil,
                        "AdditionalAttribute4": nil,
                        "AdditionalAttribute5": nil,
                        "AdditionalAttribute6": nil,
                        "AdditionalAttribute7": nil,
                        "AdditionalAttribute8": nil,
                        "AdditionalAttribute9": nil,
                        "AdditionalAttribute10": nil,
                        "AttributeSet": nil,
                        "Tags": nil,
                        "Status": "Active",
                        "Addresses": [
                            {
                                "ID": "4bc4e423-d8af-454d-a186-4a827c15bd0b",
                                "CustomerID": "4978c3ff-4382-4045-819b-2971480ddaf1",
                                "Line1": "L3, Southbank House",
                                "Line2": "13 Gallery Ave",
                                "City": "Melbourne",
                                "State": "VIC",
                                "Postcode": "3131",
                                "Country": nil,
                                "Type": "Business",
                                "DefaultForType": true
                            },
                            {
                                "ID": "35cec087-04da-46b5-b3c8-c3a7311f2417",
                                "CustomerID": "4978c3ff-4382-4045-819b-2971480ddaf1",
                                "Line1": "L3, Southbank House",
                                "Line2": "13 Gallery Ave",
                                "City": "Melbourne",
                                "State": "VIC",
                                "Postcode": "3131",
                                "Country": nil,
                                "Type": "Billing",
                                "DefaultForType": true
                            }
                        ],
                        "Contacts": [
                            {
                                "ID": "1d62f59b-657d-423f-ad95-9ad9ec4f29a3",
                                "CustomerID": "4978c3ff-4382-4045-819b-2971480ddaf1",
                                "Name": "Sheree Bond",
                                "JobTitle": nil,
                                "Phone": "0800 4389376",
                                "MobilePhone": nil,
                                "Fax": "03 4389379",
                                "Email": "accounts@diisr.govt",
                                "Website": nil,
                                "Default": true,
                                "Comment": nil,
                                "IncludeInEmail": false
                            }
                        ]
                    }'
      responses:
        '200':
          description: Success - return response of type Customers array with newly created Customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers'
              example: '{
                          "Total": 1,
                          "Page": 1,
                          "CustomerList": [
                            {
                                "ID": "7d6b441a-3067-42b1-9b81-2def95df827b",
                                "Name": "DIISR - Small Business Services customer",
                                "Currency": "AUD",
                                "PaymentTerm": "30 days",
                                "Discount": 0,
                                "TaxRule": "GST Free Exports",
                                "Carrier": "DEFAULT Carrier",
                                "SalesRepresentative": nil,
                                "Location": "Main Warehouse",
                                "Comments": nil,
                                "AccountReceivable": "610",
                                "RevenueAccount": "200",
                                "PriceTier": "Tier 1",
                                "TaxNumber": nil,
                                "AdditionalAttribute1": nil,
                                "AdditionalAttribute2": nil,
                                "AdditionalAttribute3": nil,
                                "AdditionalAttribute4": nil,
                                "AdditionalAttribute5": nil,
                                "AdditionalAttribute6": nil,
                                "AdditionalAttribute7": nil,
                                "AdditionalAttribute8": nil,
                                "AdditionalAttribute9": nil,
                                "AdditionalAttribute10": nil,
                                "AttributeSet": nil,
                                "Tags": nil,
                                "Status": "Active",
                                "LastModifiedOn": "2018-01-31T06:07:43.46Z",
                                "CreditLimit": 0
                                "Addresses": [
                                    {
                                        "ID": "b2e8260c-29f8-4153-b8bc-3b4932cb1e1d",
                                        "CustomerID": "7d6b441a-3067-42b1-9b81-2def95df827b",
                                        "Line1": "L3, Southbank House",
                                        "Line2": "13 Gallery Ave",
                                        "City": "Melbourne",
                                        "State": "VIC",
                                        "Postcode": "3131",
                                        "Country": nil,
                                        "Type": "Billing",
                                        "DefaultForType": true
                                    },
                                    {
                                        "ID": "505080d3-ebad-4d03-85ae-88df19536bc9",
                                        "CustomerID": "7d6b441a-3067-42b1-9b81-2def95df827b",
                                        "Line1": "L3, Southbank House",
                                        "Line2": "13 Gallery Ave",
                                        "City": "Melbourne",
                                        "State": "VIC",
                                        "Postcode": "3131",
                                        "Country": nil,
                                        "Type": "Business",
                                        "DefaultForType": true
                                    }
                                ],
                                "Contacts": [
                                    {
                                        "ID": "817e0314-97fc-4d3f-855b-14fbb89de2ba",
                                        "CustomerID": "7d6b441a-3067-42b1-9b81-2def95df827b",
                                        "Name": "Sheree Bond",
                                        "JobTitle": nil,
                                        "Phone": "0800 4389376",
                                        "MobilePhone": nil,
                                        "Fax": "03 4389379",
                                        "Email": "accounts@diisr.govt",
                                        "Website": nil,
                                        "Default": true,
                                        "Comment": nil,
                                        "IncludeInEmail": false
                                    }
                                ]
                            }
                          ]
                        }'
        '400':
          $ref: '#/components/responses/400Error'
    put:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: updateCustomer
      summary: Allows you to update a customer
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      requestBody:
        description: a customer object with properties to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
            example: '{
                        "ID": "7d6b441a-3067-42b1-9b81-2def95df827b",
                        "Name": "DIISR - Small Business Services customer",
                        "Currency": "AUD",
                        "PaymentTerm": "30 days",
                        "Discount": 0,
                        "TaxRule": "GST Free Exports",
                        "Carrier": "DEFAULT Carrier",
                        "SalesRepresentative": nil,
                        "Location": "Main Warehouse",
                        "Comments": nil,
                        "AccountReceivable": "610",
                        "RevenueAccount": "200",
                        "PriceTier": "Tier 1",
                        "TaxNumber": nil,
                        "AdditionalAttribute1": nil,
                        "AdditionalAttribute2": nil,
                        "AdditionalAttribute3": nil,
                        "AdditionalAttribute4": nil,
                        "AdditionalAttribute5": nil,
                        "AdditionalAttribute6": nil,
                        "AdditionalAttribute7": nil,
                        "AdditionalAttribute8": nil,
                        "AdditionalAttribute9": nil,
                        "AdditionalAttribute10": nil,
                        "AttributeSet": nil,
                        "Tags": nil,
                        "Status": "Active",
                        "Addresses": [
                            {
                                "ID": "4bc4e423-d8af-454d-a186-4a827c15bd0b",
                                "CustomerID": "4978c3ff-4382-4045-819b-2971480ddaf1",
                                "Line1": "L3, Southbank House",
                                "Line2": "13 Gallery Ave",
                                "City": "Melbourne",
                                "State": "VIC",
                                "Postcode": "3131",
                                "Country": nil,
                                "Type": "Business",
                                "DefaultForType": true
                            },
                            {
                                "ID": "35cec087-04da-46b5-b3c8-c3a7311f2417",
                                "CustomerID": "4978c3ff-4382-4045-819b-2971480ddaf1",
                                "Line1": "L3, Southbank House",
                                "Line2": "13 Gallery Ave",
                                "City": "Melbourne",
                                "State": "VIC",
                                "Postcode": "3131",
                                "Country": nil,
                                "Type": "Billing",
                                "DefaultForType": true
                            }
                        ],
                        "Contacts": [
                            {
                                "ID": "1d62f59b-657d-423f-ad95-9ad9ec4f29a3",
                                "CustomerID": "4978c3ff-4382-4045-819b-2971480ddaf1",
                                "Name": "Sheree Bond",
                                "JobTitle": nil,
                                "Phone": "0800 4389376",
                                "MobilePhone": nil,
                                "Fax": "03 4389379",
                                "Email": "accounts@diisr.govt",
                                "Website": nil,
                                "Default": true,
                                "Comment": nil,
                                "IncludeInEmail": false
                            }
                        ]
                    }'
      responses:
        '200':
          description: Success - return response of type Customers array with updated Customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers'
              example: '{
                          "Total": 1,
                          "Page": 1,
                          "CustomerList": [
                              {
                                  "ID": "7d6b441a-3067-42b1-9b81-2def95df827b",
                                  "Name": "DIISR - Small Business Services customer",
                                  "Currency": "AUD",
                                  "PaymentTerm": "30 days",
                                  "Discount": 0,
                                  "TaxRule": "GST Free Exports",
                                  "Carrier": "DEFAULT Carrier",
                                  "SalesRepresentative": nil,
                                  "Location": "Main Warehouse",
                                  "Comments": "",
                                  "AccountReceivable": "610",
                                  "RevenueAccount": "200",
                                  "PriceTier": "Tier 1",
                                  "TaxNumber": "",
                                  "AdditionalAttribute1": "",
                                  "AdditionalAttribute2": "",
                                  "AdditionalAttribute3": "",
                                  "AdditionalAttribute4": "",
                                  "AdditionalAttribute5": "",
                                  "AdditionalAttribute6": "",
                                  "AdditionalAttribute7": "",
                                  "AdditionalAttribute8": "",
                                  "AdditionalAttribute9": "",
                                  "AdditionalAttribute10": "",
                                  "AttributeSet": nil,
                                  "Tags": "",
                                  "Status": "Active",
                                  "LastModifiedOn": "2018-01-31T06:20:43.46Z",
                                  "CreditLimit": 0
                                  "Addresses": [
                                      {
                                          "ID": "35cec087-04da-46b5-b3c8-c3a7311f2417",
                                          "CustomerID": "7d6b441a-3067-42b1-9b81-2def95df827b",
                                          "Line1": "L3, Southbank House",
                                          "Line2": "13 Gallery Ave",
                                          "City": "Melbourne",
                                          "State": "VIC",
                                          "Postcode": "3131",
                                          "Country": nil,
                                          "Type": "Billing",
                                          "DefaultForType": true
                                      },
                                      {
                                          "ID": "4bc4e423-d8af-454d-a186-4a827c15bd0b",
                                          "CustomerID": "7d6b441a-3067-42b1-9b81-2def95df827b",
                                          "Line1": "L3, Southbank House",
                                          "Line2": "13 Gallery Ave",
                                          "City": "Melbourne",
                                          "State": "VIC",
                                          "Postcode": "3131",
                                          "Country": nil,
                                          "Type": "Business",
                                          "DefaultForType": true
                                      }
                                  ],
                                  "Contacts": [
                                      {
                                          "ID": "1d62f59b-657d-423f-ad95-9ad9ec4f29a3",
                                          "CustomerID": "7d6b441a-3067-42b1-9b81-2def95df827b",
                                          "Name": "Sheree Bond",
                                          "JobTitle": nil,
                                          "Phone": "0800 4389376",
                                          "MobilePhone": nil,
                                          "Fax": "03 4389379",
                                          "Email": "accounts@diisr.govt",
                                          "Website": nil,
                                          "Default": true,
                                          "Comment": nil,
                                          "IncludeInEmail": false
                                      }
                                  ]
                              }
                          ]
                      }'
        '400':
          $ref: '#/components/responses/400Error'
  /ref/paymentterm:
    get:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: getPaymentTerms
      summary: Allows you to retrieve the payment terms
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/method'
        - $ref: '#/components/parameters/isActive'
        - $ref: '#/components/parameters/isDefault'
      responses:
        '200':
          description: Success - return response of type Payment Terms array with 0 to n Payment Terms
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTerms'
              example: '{
                          "Total": 3,
                          "Page": 1,
                          "PaymentTermList": [
                            {
                              "ID": "e6c25fa9-bb14-45b2-afe7-428e454663ef",
                              "Name": "10 days since end of month",
                              "Duration": 10,
                              "Method": "days since the end of the month",
                              "IsActive": true,
                              "IsDefault": false
                            },
                            {
                              "ID": "927a7013-e1d9-4194-a547-28b1b4c6b413",
                              "Name": "30 days",
                              "Duration": 30,
                              "Method": "number of days",
                              "IsActive": true,
                              "IsDefault": false
                            },
                            {
                              "ID": "1845c010-e8a3-4c51-a0be-a1211f406442",
                              "Name": "Last day of the month",
                              "Duration": 10,
                              "Method": "last day of next month",
                              "IsActive": true,
                              "IsDefault": false
                            }
                          ]
                        }'
    post:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: createPaymentTerm
      summary: Allows you to create a payment term
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      requestBody:
        description: a payment term object with properties to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTerm'
            example: '{
                        "Name": "5 days since end of month",
                        "Duration": 5,
                        "Method": "days since the end of the month",
                        "IsActive": true,
                        "IsDefault": false
                      }'
      responses:
        '200':
          description: Success - return response of type Payment Terms array with newly created Payment Term
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTerms'
              example: '{
                          "Total": 1,
                          "Page": 1,
                          "PaymentTermList": [
                            {
                              "ID": "e6c25fa9-bb14-45b2-afe7-428e454663ef",
                              "Name": "5 days since end of month",
                              "Duration": 5,
                              "Method": "days since the end of the month",
                              "IsActive": true,
                              "IsDefault": false
                            }
                          ]
                        }'
        '400':
          $ref: '#/components/responses/400Error'
    put:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: updatePaymentTerm
      summary: Allows you to update a payment term
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      requestBody:
        description: a payment term object with properties to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTerm'
            example: '{
                        "ID": "e6c25fa9-bb14-45b2-afe7-428e454663ef",
                        "Name": "10 days since end of month",
                        "Duration": 10,
                        "Method": "days since the end of the month",
                        "IsActive": true,
                        "IsDefault": true
                      }'
      responses:
        '200':
          description: Success - return response of type Payment Terms array with updated Payment Term
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTerms'
              example: '{
                          "Total": 1,
                          "Page": 1,
                          "PaymentTermList": [
                            {
                              "ID": "e6c25fa9-bb14-45b2-afe7-428e454663ef",
                              "Name": "10 days since end of month",
                              "Duration": 10,
                              "Method": "days since the end of the month",
                              "IsActive": true,
                              "IsDefault": true
                            }
                          ]
                        }'
        '400':
          $ref: '#/components/responses/400Error'
    delete:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: deletePaymentTerm
      summary: Allows you to delete a payment term
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Success - delete existing Payment Term and return response of type Payment Terms array with deleted Payment Term
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
              example: '{
                          "Success": true
                        }'
        '400':
          $ref: '#/components/responses/400Error'
  /ref/tax:
    get:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: getTaxes
      summary: Allows you to retrieve the taxes
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/isActive'
        - $ref: '#/components/parameters/isTaxForSale'
        - $ref: '#/components/parameters/isTaxForPurchase'
        - $ref: '#/components/parameters/account'
      responses:
        '200':
          description: Success - return response of type Taxes array with 0 to n Taxes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Taxes'
              example: '{
                          "Total": 2,
                          "Page": 1,
                          "TaxRuleList": [
                            {
                              "ID": "9d707beb-19cf-4d7b-a5d9-9eaff05c504c",
                              "Name": "GST on Income",
                              "Account": "820",
                              "IsActive": true,
                              "TaxInclusive": false,
                              "TaxPercent": 10,
                              "IsTaxForSale": true,
                              "IsTaxForPurchase": false,
                              "Components": [
                                {
                                  "ID": "B1151EEA-3364-4534-88E6-DF2C6B59A6D8",
                                  "Name": "Tax",
                                  "Percent": "10.0000000000",
                                  "AccountCode": "0",
                                  "ComponentOrder": "1"
                                }
                              ]
                            },
                            {
                              "ID": "d4d53cdf-4b87-4b67-9c17-733fc5419a2a",
                              "Name": "Tax test",
                              "Account": "820",
                              "IsActive": true,
                              "TaxInclusive": false,
                              "TaxPercent": 0,
                              "IsTaxForSale": false,
                              "IsTaxForPurchase": true,
                              "Components": [
                                {
                                  "ID": "534AC4D9-6F37-448A-971E-DF1C2B21FB64",
                                  "Name": "No Tax",
                                  "Percent": "0.0000000000",
                                  "AccountCode": "",
                                  "Compound": "0",
                                  "ComponentOrder": "1"
                                }
                              ]
                            }
                          ]
                        }'
    post:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: createTax
      summary: Allows you to create a tax
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      requestBody:
        description: a tax object with properties to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tax'
            example: '{
                        "Name": "Post test",
                        "Account": "800",
                        "IsActive": true,
                        "TaxInclusive": false,
                        "TaxPercent": 35,
                        "IsTaxForSale": true,
                        "IsTaxForPurchase": true,
                        "Components": [
                          {
                            "Name": "Tax 1st",
                            "Percent": "10.0000000000",
                            "AccountCode": "800",
                            "Compound": "1",
                            "ComponentOrder": "1"
                          },
                          {
                            "Name": "Tax 2nd",
                            "Percent": "15.0000000000",
                            "AccountCode": "800",
                            "Compound": "0",
                            "ComponentOrder": "2"
                          }
                        ]
                      }'
      responses:
        '200':
          description: Success - return response of type Taxes array with newly created Tax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Taxes'
              example: '{
                          "Total": 1,
                          "Page": 1,
                          "TaxRuleList": [
                            {
                              "ID": "24551562-ebd1-4294-a04a-3ab258f5e541",
                              "Name": "Post test",
                              "Account": "800",
                              "IsActive": true,
                              "TaxInclusive": false,
                              "TaxPercent": 35,
                              "IsTaxForSale": true,
                              "IsTaxForPurchase": true,
                              "Components": [
                                {
                                  "ID": "0119E1C0-504A-429B-B4E2-4EEC02A9E88A",
                                  "Name": "Tax 1st",
                                  "Percent": "10.0000000000",
                                  "AccountCode": "800",
                                  "Compound": "1",
                                  "ComponentOrder": "1"
                                },
                                {
                                  "ID": "0B6D5C0F-D8EF-41FF-86D2-A05E5616FC61",
                                  "Name": "Tax 2nd",
                                  "Percent": "15.0000000000",
                                  "AccountCode": "800",
                                  "Compound": "0",
                                  "ComponentOrder": "2"
                                }
                              ]
                            }
                          ]
                        }'
        '400':
          $ref: '#/components/responses/400Error'
    put:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: updateTax
      summary: Allows you to update a tax
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      requestBody:
        description: a tax object with properties to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tax'
            example: '{
                        "ID": "24551562-ebd1-4294-a04a-3ab258f5e541",
                        "Name": "PUT test",
                        "Account": "800",
                        "IsActive": true,
                        "TaxInclusive": false,
                        "TaxPercent": 55,
                        "IsTaxForSale": true,
                        "IsTaxForPurchase": true,
                        "Components": [
                          {
                            "ID": "0119E1C0-504A-429B-B4E2-4EEC02A9E88A",
                            "Name": "Tax 1st",
                            "Percent": "20.0000000000",
                            "AccountCode": "800",
                            "Compound": "1",
                            "ComponentOrder": "1"
                          },
                          {
                            "ID": "0B6D5C0F-D8EF-41FF-86D2-A05E5616FC61",
                            "Name": "Tax 2nd",
                            "Percent": "35.0000000000",
                            "AccountCode": "800",
                            "Compound": "0",
                            "ComponentOrder": "2"
                          }
                        ]
                      }'
      responses:
        '200':
          description: Success - return response of type Taxes array with updated Tax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Taxes'
              example: '{
                          "Total": 1,
                          "Page": 1,
                          "TaxRuleList": [
                            {
                              "ID": "24551562-ebd1-4294-a04a-3ab258f5e541",
                              "Name": "PUT test",
                              "Account": "800",
                              "IsActive": true,
                              "TaxInclusive": false,
                              "TaxPercent": 55,
                              "IsTaxForSale": true,
                              "IsTaxForPurchase": true,
                              "Components": [
                                {
                                  "ID": "0119E1C0-504A-429B-B4E2-4EEC02A9E88A",
                                  "Name": "Tax 1st",
                                  "Percent": "20.0000000000",
                                  "AccountCode": "800",
                                  "Compound": "1",
                                  "ComponentOrder": "1"
                                },
                                {
                                  "ID": "0B6D5C0F-D8EF-41FF-86D2-A05E5616FC61",
                                  "Name": "Tax 2nd",
                                  "Percent": "35.0000000000",
                                  "AccountCode": "800",
                                  "Compound": "0",
                                  "ComponentOrder": "2"
                                }
                              ]
                            }
                          ]
                        }'
        '400':
          $ref: '#/components/responses/400Error'
  /ref/account:
    get:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: getAccounts
      summary: Allows you to retrieve the Chart of Accounts
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/code'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/class'
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/status'
      responses:
        '200':
          description: Success - return response of type Chart of Accounts array with 0 to n Chart of Accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accounts'
              example: '{
                          "Total": 3,
                          "Page": 1,
                          "AccountsList": [
                            {
                              "Code": "800",
                              "Status": "ACTIVE",
                              "Name": "Accounts Payable",
                              "Type": "CURRLIAB",
                              "Description": "Outstanding invoices the company has received from suppliers but has not yet paid at balance date",
                              "Class": "LIABILITY",
                              "SystemAccount": "CREDITORS",
                              "BankAccountNumber": null,
                              "BankAccountId": null,
                              "ForPayments": false,
                              "DisplayName": "800: Accounts Payable",
                              "OldCode": null
                            },
                            {
                              "Code": "610",
                              "Status": "ACTIVE",
                              "Name": "Accounts Receivable",
                              "Type": "CURRENT",
                              "Description": "Outstanding invoices the company has issued out to the client but has not yet received in cash at balance date.",
                              "Class": "ASSET",
                              "SystemAccount": "DEBTORS",
                              "BankAccountNumber": null,
                              "BankAccountId": null,
                              "ForPayments": false,
                              "DisplayName": "610: Accounts Receivable",
                              "OldCode": null
                            },
                            {
                              "Code": "400",
                              "Status": "ACTIVE",
                              "Name": "Advertising",
                              "Type": "EXPENSE",
                              "Description": "Expenses incurred for advertising while trying to increase sales",
                              "Class": "EXPENSE",
                              "SystemAccount": null,
                              "BankAccountNumber": null,
                              "BankAccountId": null,
                              "ForPayments": false,
                              "DisplayName": "400: Advertising",
                              "OldCode": null
                            }
                          ]
                        }'
    post:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: createAccount
      summary: Allows you to create an Account
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      requestBody:
        description: an Account object with properties to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
            example: '{
                        "Code": "001",
                        "Status": "ACTIVE",
                        "Name": "Accounts Payable test",
                        "Type": "CURRLIAB",
                        "Description": "Outstanding invoices the company has received from suppliers but has not yet paid at balance date",
                        "Class": "LIABILITY",
                        "SystemAccount": "CREDITORS",
                      }'
      responses:
        '200':
          description: Success - return response of type Accounts array with newly created Account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accounts'
              example: '{
                          "Total": 1,
                          "Page": 1,
                          "AccountsList": [
                            {
                              "Code": "001",
                              "Status": "ACTIVE",
                              "Name": "Accounts Payable test",
                              "Type": "CURRLIAB",
                              "Description": "Outstanding invoices the company has received from suppliers but has not yet paid at balance date",
                              "Class": "LIABILITY",
                              "SystemAccount": "CREDITORS",
                              "BankAccountNumber": null,
                              "BankAccountId": null,
                              "ForPayments": false,
                              "DisplayName": "001: Accounts Payable test",
                              "OldCode": null
                            }
                          ]
                        }'
        '400':
          $ref: '#/components/responses/400Error'
    put:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: updateAccount
      summary: Allows you to update an Account
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      requestBody:
        description: an Account object with properties to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
            example: '{
                        "Code": "001",
                        "Status": "ACTIVE",
                        "Name": "Accounts Payable put test",
                        "Type": "CURRLIAB",
                        "Description": "Put test description",
                        "Class": "LIABILITY",
                        "SystemAccount": "CREDITORS"
                      }'
      responses:
        '200':
          description: Success - return response of type Accounts array with updated Account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accounts'
              example: '{
                          "Total": 1,
                          "Page": 1,
                          "AccountsList": [
                            {
                              "Code": "001",
                              "Status": "ACTIVE",
                              "Name": "Accounts Payable put test",
                              "Type": "CURRLIAB",
                              "Description": "Put test description",
                              "Class": "LIABILITY",
                              "SystemAccount": "CREDITORS",
                              "BankAccountNumber": null,
                              "BankAccountId": null,
                              "ForPayments": false,
                              "DisplayName": "001: Accounts Payable put test",
                              "OldCode": null
                            }
                          ]
                        }'
        '400':
          $ref: '#/components/responses/400Error'
    delete:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: deleteAccount
      summary: Allows you to delete an Account
      parameters:
        - $ref: '#/components/parameters/code'
      responses:
        '200':
          description: Success - delete existing Account and return response of type Accounts array with deleted Account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
              example: '{
                          "Success": true
                        }'
        '400':
          $ref: '#/components/responses/400Error'
  /me:
    get:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: getMe
      summary: Allows you to retrieve your information
      responses:
        '200':
          description: Success - return response of type Customers array with 0 to n Customers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Me'
              example: '{
                          "Company": "My",
                          "Currency": "RUB",
                          "TimeZone": "Etc/GMT",
                          "DefaultWeightUnits": "oz",
                          "DefaultDimensionsUnits": "m",
                          "LockDate": null,
                          "OpeningBalanceDate": "2017-11-30T00:00:00Z"
                        }'
  /ref/priceTier:
    get:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: getPriceTiers
      summary: Allows you to retrieve the Price Tiers
      responses:
        '200':
          description: Success - return response of Price Tiers array with n Price Tiers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceTiers'
              example: '{
                          "PriceTiers": [
                            {
                              "Code": 1,
                              "Name": "Tier 1"
                            },
                            {
                              "Code": 2,
                              "Name": "Tier 2"
                            },
                            {
                              "Code": 3,
                              "Name": "Tier 3"
                            },
                            {
                              "Code": 4,
                              "Name": "Tier 4"
                            },
                            {
                              "Code": 5,
                              "Name": "Tier 5"
                            },
                            {
                              "Code": 6,
                              "Name": "Tier 6"
                            },
                            {
                              "Code": 7,
                              "Name": "Tier 7"
                            },
                            {
                              "Code": 8,
                              "Name": "Tier 8"
                            },
                            {
                              "Code": 9,
                              "Name": "Tier 9"
                            },
                            {
                              "Code": 10,
                              "Name": "Tier 10"
                            }
                          ]
                        }'
  # /sale:
  #   get:
  #     security:
  #       - accountID: []
  #         appKey: []
  #     tags:
  #       - Inventory
  #     operationId: getSale
  #     summary: Allows you to retrieve the Sale
  #     parameters:
  #       - $ref: '#/components/parameters/id'
  #       - $ref: '#/components/parameters/combineAdditionalCharges'
  #       - $ref: '#/components/parameters/hideInventoryMovements'
  #       - $ref: '#/components/parameters/includeTransactions'
  #     responses:
  #       '200':
  #         description: Success - Returns Sale
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Sale'
  #             example: '{
  #               "ID": "916ab4c0-6ccb-4c93-873d-0603859050e4",
  #               "Customer": "Hamilton Smith Pty",
  #               "CustomerID": "6c18f8e9-90e1-418f-aebc-1219e67e4b9c",
  #               "Contact": "No Name",
  #               "Phone": "03 3189080",
  #               "Email": "infodemo@hsmithdemo.co",
  #               "DefaultAccount": "200",
  #               "SkipQuote": false,
  #               "BillingAddress": {
  #                 "DisplayAddressLine1": "3 Park Street Industrial Village Southbank",
  #                 "DisplayAddressLine2": "Melbourne VIC 3331",
  #                 "Line1": "3 Park Street Industrial Village",
  #                 "Line2": "Southbank",
  #                 "City": "Melbourne",
  #                 "State": "VIC",
  #                 "Postcode": "3331",
  #                 "Country": "USA"
  #               },
  #               "ShippingAddress": {
  #                 "DisplayAddressLine1": "3 Park Street Industrial Village Southbank",
  #                 "DisplayAddressLine2": "Melbourne VIC 3331",
  #                 "Line1": "3 Park Street Industrial Village",
  #                 "Line2": "Southbank",
  #                 "City": "Melbourne",
  #                 "State": "VIC",
  #                 "Postcode": "3331",
  #                 "Country": "USA",
  #                 "Company": "DIISR - Small Business Services",
  #                 "Contact": "Sheree Bond",
  #                 "ShipToOther": false
  #               },
  #               "ShippingNotes": "",
  #               "BaseCurrency": "RUB",
  #               "CustomerCurrency": "RUB",
  #               "TaxRule": "Tax on Sales",
  #               "TaxCalculation": "Exclusive",
  #               "Terms": "30 days",
  #               "PriceTier": "Tier 1",
  #               "ShipBy": "2017-11-30T00:00:00Z",
  #               "Location": "Main Warehouse",
  #               "SaleOrderDate": "2017-10-28T00:00:00Z",
  #               "LastModifiedOn": "2017-11-22T10:10:49.75Z",
  #               "Note": "",
  #               "CustomerReference": "",
  #               "COGSAmount": 0,
  #               "Status": "ORDERED",
  #               "CombinedPickingStatus": "NOT AVAILABLE",
  #               "CombinedPackingStatus": "NOT AVAILABLE",
  #               "CombinedShippingStatus": "NOT AVAILABLE",
  #               "FulFilmentStatus": "NOT AVAILABLE",
  #               "CombinedInvoiceStatus": "NOT AVAILABLE",
  #               "CombinedPaymentStatus": "UNPAID",
  #               "CombinedTrackingNumbers": "",
  #               "Carrier": "test carrier",
  #               "CurrencyRate": 1,
  #               "SalesRepresentative": "DEFAULT billing contact",
  #               "ServiceOnly": false,
  #               "Type": "Advanced Sale",
  #               "SourceChannel": "Amazon_US",
  #               "Quote": {
  #                 "Memo": "",
  #                 "Status": "AUTHORISED",
  #                 "Prepayments": [],
  #                 "Lines": [
  #                   {
  #                     "ProductID": "4aadd8f6-4d3d-46ca-acbb-1a9a662f9bc1",
  #                     "SKU": "Bread",
  #                     "Name": "Baked Bread",
  #                     "Quantity": 1,
  #                     "Price": 8,
  #                     "Discount": 0,
  #                     "Tax": 0,
  #                     "AverageCost": 5,
  #                     "TaxRule": "Tax on Sales",
  #                     "Comment": "",
  #                     "Total": 8,
  #                     "ProductLength": 0,
  #                     "ProductWidth": 0,
  #                     "ProductHeight": 0,
  #                     "ProductWeight": 0,
  #                     "WeightUnits": "",
  #                     "DimensionsUnits": "",
  #                     "ProductCustomField1": null,
  #                     "ProductCustomField2": null,
  #                     "ProductCustomField3": null,
  #                     "ProductCustomField4": null,
  #                     "ProductCustomField5": null,
  #                     "ProductCustomField6": null,
  #                     "ProductCustomField7": null,
  #                     "ProductCustomField8": null,
  #                     "ProductCustomField9": null,
  #                     "ProductCustomField10": null
  #                   }
  #                 ],
  #                 "AdditionalCharges": [
  #                   {
  #                     "Description": "Desktop/network support via phone. Per month fixed fee for minimum 20 hours/month.",
  #                     "Price": 350,
  #                     "Quantity": 1,
  #                     "Discount": 0,
  #                     "Tax": 0,
  #                     "Total": 350,
  #                     "TaxRule": "Tax on Sales",
  #                     "Comment": ""
  #                   }
  #                 ],
  #                 "TotalBeforeTax": 358,
  #                 "Tax": 0,
  #                 "Total": 358
  #               },
  #               "Order": {
  #                 "SaleOrderNumber": "SO-00001",
  #                 "Memo": "",
  #                 "Status": "AUTHORISED",
  #                 "Lines": [
  #                   {
  #                     "ProductID": "4aadd8f6-4d3d-46ca-acbb-1a9a662f9bc1",
  #                     "SKU": "Bread",
  #                     "Name": "Baked Bread",
  #                     "Quantity": 1,
  #                     "Price": 8,
  #                     "Discount": 0,
  #                     "Tax": 0,
  #                     "AverageCost": 5,
  #                     "TaxRule": "Tax on Sales",
  #                     "Comment": "",
  #                     "DropShip": false,
  #                     "Backorder": false,
  #                     "BackorderQuantity": 0,
  #                     "Total": 8,
  #                     "ProductLength": 0,
  #                     "ProductWidth": 0,
  #                     "ProductHeight": 0,
  #                     "ProductWeight": 0,
  #                     "WeightUnits": "",
  #                     "DimensionsUnits": "",
  #                     "ProductCustomField1": null,
  #                     "ProductCustomField2": null,
  #                     "ProductCustomField3": null,
  #                     "ProductCustomField4": null,
  #                     "ProductCustomField5": null,
  #                     "ProductCustomField6": null,
  #                     "ProductCustomField7": null,
  #                     "ProductCustomField8": null,
  #                     "ProductCustomField9": null,
  #                     "ProductCustomField10": null
  #                   }
  #                 ],
  #                 "AdditionalCharges": [
  #                   {
  #                     "Description": "Desktop/network support via phone. Per month fixed fee for minimum 20 hours/month.",
  #                     "Price": 350,
  #                     "Quantity": 1,
  #                     "Discount": 0,
  #                     "Tax": 0,
  #                     "Total": 350,
  #                     "TaxRule": "Tax on Sales",
  #                     "Comment": ""
  #                   }
  #                 ],
  #                 "TotalBeforeTax": 8,
  #                 "Tax": 0,
  #                 "Total": 8
  #               },
  #               "Fulfilments": [
  #                 {
  #                   "TaskID": "cde5fb4a-1dac-4e9a-bc33-5dfa14eedb57",
  #                   "FulfillmentNumber": 1,
  #                   "LinkedInvoiceNumber": "INV-00001",
  #                   "FulFilmentStatus": "NOT FULFILLED",
  #                   "Pick": {
  #                     "Status": "DRAFT",
  #                     "Lines": [
  #                       {
  #                         "ProductID": "4aadd8f6-4d3d-46ca-acbb-1a9a662f9bc1",
  #                         "SKU": "Bread",
  #                         "Name": "Baked Bread",
  #                         "Location": "Main Warehouse",
  #                         "LocationID": "19aeca31-bd49-4fbe-8abd-37a6169cc2cb",
  #                         "Quantity": 1,
  #                         "BatchSN": "PO-00001-1",
  #                         "ExpiryDate": "2017-11-30T00:00:00Z",
  #                         "ProductLength": 0,
  #                         "ProductWidth": 0,
  #                         "ProductHeight": 0,
  #                         "ProductWeight": 0,
  #                         "WeightUnits": "",
  #                         "DimensionsUnits": "",
  #                         "ProductCustomField1": null,
  #                         "ProductCustomField2": null,
  #                         "ProductCustomField3": null,
  #                         "ProductCustomField4": null,
  #                         "ProductCustomField5": null,
  #                         "ProductCustomField6": null,
  #                         "ProductCustomField7": null,
  #                         "ProductCustomField8": null,
  #                         "ProductCustomField9": null,
  #                         "ProductCustomField10": null
  #                       }
  #                     ]
  #                   },
  #                   "Pack": {
  #                     "Status": "NOT AVAILABLE",
  #                     "Lines": [
  #                       {
  #                         "ProductID": "4aadd8f6-4d3d-46ca-acbb-1a9a662f9bc1",
  #                         "SKU": "Bread",
  #                         "Name": "Baked Bread",
  #                         "Location": "Main Warehouse",
  #                         "LocationID": "19aeca31-bd49-4fbe-8abd-37a6169cc2cb",
  #                         "Box": "Box 1",
  #                         "Quantity": 1,
  #                         "BatchSN": "PO-00001-1",
  #                         "ExpiryDate": "2017-11-30T00:00:00Z",
  #                         "ProductLength": 0,
  #                         "ProductWidth": 0,
  #                         "ProductHeight": 0,
  #                         "ProductWeight": 0,
  #                         "WeightUnits": "",
  #                         "DimensionsUnits": "",
  #                         "ProductCustomField1": null,
  #                         "ProductCustomField2": null,
  #                         "ProductCustomField3": null,
  #                         "ProductCustomField4": null,
  #                         "ProductCustomField5": null,
  #                         "ProductCustomField6": null,
  #                         "ProductCustomField7": null,
  #                         "ProductCustomField8": null,
  #                         "ProductCustomField9": null,
  #                         "ProductCustomField10": null
  #                       }
  #                     ]
  #                   },
  #                   "Ship": {
  #                     "Status": "NOT AVAILABLE",
  #                     "RequireBy": null,
  #                     "ShippingAddress": {
  #                       "DisplayAddressLine1": "Line 1 Lines 2",
  #                       "DisplayAddressLine2": "City State Code Russia",
  #                       "Line1": "Line 1",
  #                       "Line2": "Lines 2",
  #                       "City": "City",
  #                       "State": "State",
  #                       "Postcode": "Code",
  #                       "Country": "Russia",
  #                       "Company": "DIISR - Small Business Services",
  #                       "Contact": "Sheree Bond",
  #                       "ShipToOther": false
  #                     },
  #                     "ShippingNotes": "",
  #                     "Lines": [
  #                       {
  #                         "ID": "67f67884-8115-4546-93c9-48230f24bd56",
  #                         "ShipmentDate": "2017-11-22T00:00:00Z",
  #                         "Carrier": "DEFAULT Carrier",
  #                         "Boxes": "Box 1",
  #                         "TrackingNumber": "",
  #                         "TrackingURL": "",
  #                         "IsShipped": true
  #                       }
  #                     ]
  #                   }
  #                 }
  #               ],
  #               "Invoices": [
  #                 {
  #                   "TaskID": "b039f19e-66f8-4309-a4b1-abf928303c88",
  #                   "InvoiceNumber": "INV-00001",
  #                   "Memo": "",
  #                   "Status": "AUTHORISED",
  #                   "InvoiceDate": "2017-11-22T00:00:00Z",
  #                   "InvoiceDueDate": "2017-12-22T00:00:00Z",
  #                   "CurrencyConversionRate": 1,
  #                   "BillingAddressLine1": "3 Park Street Industrial Village Southbank",
  #                   "BillingAddressLine2": "Melbourne VIC 3331",
  #                   "LinkedFulfillmentNumber": "1",
  #                   "Lines": [
  #                     {
  #                       "ProductID": "4aadd8f6-4d3d-46ca-acbb-1a9a662f9bc1",
  #                       "SKU": "Bread",
  #                       "Name": "Baked Bread",
  #                       "Quantity": 1,
  #                       "Price": 8,
  #                       "Discount": 0,
  #                       "Tax": 0,
  #                       "Total": 8,
  #                       "AverageCost": 5,
  #                       "TaxRule": "Tax on Sales",
  #                       "Account": "200",
  #                       "Comment": "",
  #                       "ProductLength": 0,
  #                       "ProductWidth": 0,
  #                       "ProductHeight": 0,
  #                       "ProductWeight": 0,
  #                       "WeightUnits": "",
  #                       "DimensionsUnits": "",
  #                       "ProductCustomField1": null,
  #                       "ProductCustomField2": null,
  #                       "ProductCustomField3": null,
  #                       "ProductCustomField4": null,
  #                       "ProductCustomField5": null,
  #                       "ProductCustomField6": null,
  #                       "ProductCustomField7": null,
  #                       "ProductCustomField8": null,
  #                       "ProductCustomField9": null,
  #                       "ProductCustomField10": null
  #                     }
  #                   ],
  #                   "AdditionalCharges": [
  #                     {
  #                       "Description": "Desktop/network support via phone. Per month fixed fee for minimum 20 hours/month.",
  #                       "Quantity": 1,
  #                       "Price": 350,
  #                       "Discount": 0,
  #                       "Tax": 0,
  #                       "Total": 350,
  #                       "TaxRule": "Tax on Sales",
  #                       "Account": "200",
  #                       "Comment": ""
  #                     }
  #                   ],
  #                   "Payments": [],
  #                   "TotalBeforeTax": 358,
  #                   "Tax": 0,
  #                   "Total": 358,
  #                   "Paid": 0
  #                 }
  #               ],
  #               "CreditNotes": [
  #                 {
  #                   "TaskID": "280fba91-281c-4416-ad43-674ae2d17355",
  #                   "CreditNoteInvoiceNumber": "INV-00001",
  #                   "Memo": "",
  #                   "Status": "DRAFT",
  #                   "CreditNoteDate": "2017-11-22T00:00:00Z",
  #                   "CreditNoteNumber": "CR-00001",
  #                   "CreditNoteConversionRate": 1,
  #                   "Lines": [
  #                     {
  #                       "ProductID": "4aadd8f6-4d3d-46ca-acbb-1a9a662f9bc1",
  #                       "SKU": "Bread",
  #                       "Name": "Baked Bread",
  #                       "Quantity": 1,
  #                       "Price": 8,
  #                       "Discount": 0,
  #                       "Tax": 0,
  #                       "Total": 8,
  #                       "AverageCost": 5,
  #                       "TaxRule": "Tax on Sales",
  #                       "Account": "200",
  #                       "Comment": "",
  #                       "ProductLength": 0,
  #                       "ProductWidth": 0,
  #                       "ProductHeight": 0,
  #                       "ProductWeight": 0,
  #                       "WeightUnits": "",
  #                       "DimensionsUnits": "",
  #                       "ProductCustomField1": null,
  #                       "ProductCustomField2": null,
  #                       "ProductCustomField3": null,
  #                       "ProductCustomField4": null,
  #                       "ProductCustomField5": null,
  #                       "ProductCustomField6": null,
  #                       "ProductCustomField7": null,
  #                       "ProductCustomField8": null,
  #                       "ProductCustomField9": null,
  #                       "ProductCustomField10": null
  #                     }
  #                   ],
  #                   "AdditionalCharges": [
  #                     {
  #                       "Description": "Desktop/network support via phone. Per month fixed fee for minimum 20 hours/month.",
  #                       "Quantity": 1,
  #                       "Price": 350,
  #                       "Discount": 0,
  #                       "Tax": 0,
  #                       "Total": 350,
  #                       "TaxRule": "Tax on Sales",
  #                       "Account": "200",
  #                       "Comment": ""
  #                     }
  #                   ],
  #                   "Refunds": [
  #                     {
  #                       "ID": "20d5ff25-afa2-cd74-96d7-c7f0dd1fa1c1",
  #                       "Reference": "",
  #                       "Amount": 358,
  #                       "DatePaid": "2017-11-23T00:00:00Z",
  #                       "Account": "718",
  #                       "CurrencyRate": 1,
  #                       "DateCreated": "2017-11-22T06:58:21.8882229Z"
  #                     }
  #                   ],
  #                   "Restock": [
  #                     {
  #                       "ProductID": "4aadd8f6-4d3d-46ca-acbb-1a9a662f9bc1",
  #                       "SKU": "Bread",
  #                       "Name": "Baked Bread",
  #                       "Location": "Main Warehouse",
  #                       "LocationID": "19aeca31-bd49-4fbe-8abd-37a6169cc2cb",
  #                       "Quantity": 1,
  #                       "BatchSN": "PO-00001-1",
  #                       "ExpiryDate": "2017-11-30T00:00:00Z",
  #                       "RestockDate": "2017-11-30T00:00:00Z",
  #                       "RestockLocationID": "19aeca31-bd49-4fbe-8abd-37a6169cc2cb",
  #                       "RestockLocation": "Main Warehouse"
  #                     }
  #                   ],
  #                   "TotalBeforeTax": 358,
  #                   "Tax": 0,
  #                   "Total": 358
  #                 }
  #               ],
  #               "ManualJournals": {
  #                 "Status": "NOT AVAILABLE",
  #                 "Lines": []
  #               },
  #               "ExternalID": null,
  #               "AdditionalAttributes": {
  #                 "AdditionalAttribute1": "",
  #                 "AdditionalAttribute2": "",
  #                 "AdditionalAttribute3": "",
  #                 "AdditionalAttribute4": "",
  #                 "AdditionalAttribute5": "",
  #                 "AdditionalAttribute6": "",
  #                 "AdditionalAttribute7": "",
  #                 "AdditionalAttribute8": "",
  #                 "AdditionalAttribute9": "",
  #                 "AdditionalAttribute10": ""
  #               },
  #               "Attachments": [
  #                 {
  #                   "ID": "1a103e3e-9837-4294-8cc3-640ebb4fc387",
  #                   "ContentType": "image/jpeg",
  #                   "FileName": "1471081716149.jpg",
  #                   "DownloadUrl": "https://example.api.url/Attachment/Download?ID=1a103e3e-9837-4294-8cc3-640ebb4fc387&ContentType=image/jpeg&FileName=1471081716149.jpg"
  #                 }
  #               ],
  #               "InventoryMovements": [
  #                 {
  #                   "TaskID": "cde5fb4a-1dac-4e9a-bc33-5dfa14eedb57",
  #                   "ProductID": "4aadd8f6-4d3d-46ca-acbb-1a9a662f9bc1",
  #                   "Date": "2017-11-22T00:00:00Z",
  #                   "COGS": 0,
  #                   "ProductLength": 0,
  #                   "ProductWidth": 0,
  #                   "ProductHeight": 0,
  #                   "ProductWeight": 0,
  #                   "WeightUnits": "",
  #                   "DimensionsUnits": "",
  #                   "ProductCustomField1": null,
  #                   "ProductCustomField2": null,
  #                   "ProductCustomField3": null,
  #                   "ProductCustomField4": null,
  #                   "ProductCustomField5": null,
  #                   "ProductCustomField6": null,
  #                   "ProductCustomField7": null,
  #                   "ProductCustomField8": null,
  #                   "ProductCustomField9": null,
  #                   "ProductCustomField10": null
  #                 },
  #                 {
  #                   "TaskID": "529511e7-6ed6-4a99-a2a7-fab1d32198eb",
  #                   "ProductID": "4aadd8f6-4d3d-46ca-acbb-1a9a662f9bc1",
  #                   "Date": "2017-11-22T00:00:00Z",
  #                   "COGS": 0,
  #                   "ProductLength": 0,
  #                   "ProductWidth": 0,
  #                   "ProductHeight": 0,
  #                   "ProductWeight": 0,
  #                   "WeightUnits": "",
  #                   "DimensionsUnits": "",
  #                   "ProductCustomField1": null,
  #                   "ProductCustomField2": null,
  #                   "ProductCustomField3": null,
  #                   "ProductCustomField4": null,
  #                   "ProductCustomField5": null,
  #                   "ProductCustomField6": null,
  #                   "ProductCustomField7": null,
  #                   "ProductCustomField8": null,
  #                   "ProductCustomField9": null,
  #                   "ProductCustomField10": null
  #                 },
  #                 {
  #                   "TaskID": "529511e7-6ed6-4a99-a2a7-fab1d32198eb",
  #                   "ProductID": "4aadd8f6-4d3d-46ca-acbb-1a9a662f9bc1",
  #                   "Date": "2017-11-22T00:00:00Z",
  #                   "COGS": 0,
  #                   "ProductLength": 0,
  #                   "ProductWidth": 0,
  #                   "ProductHeight": 0,
  #                   "ProductWeight": 0,
  #                   "WeightUnits": "",
  #                   "DimensionsUnits": "",
  #                   "ProductCustomField1": null,
  #                   "ProductCustomField2": null,
  #                   "ProductCustomField3": null,
  #                   "ProductCustomField4": null,
  #                   "ProductCustomField5": null,
  #                   "ProductCustomField6": null,
  #                   "ProductCustomField7": null,
  #                   "ProductCustomField8": null,
  #                   "ProductCustomField9": null,
  #                   "ProductCustomField10": null
  #                 }
  #               ],
  #               "Transactions": [
  #                 {
  #                   "TaskID": "cc6e25b2-d9ad-434c-8d77-30f36f4cb7ed",
  #                   "TransactionID": "e960bd83-23e4-44d3-9762-0589a09407cf",
  #                   "Debit": "610",
  #                   "Credit": "200",
  #                   "Description": "3",
  #                   "Amount": 1,
  #                   "EffectiveDate": "2018-09-25T00:00:00Z"
  #                 },
  #                 {
  #                   "TaskID": "cc6e25b2-d9ad-434c-8d77-30f36f4cb7ed",
  #                   "TransactionID": "0ae21546-2491-4f98-a898-1e6f0af633bc",
  #                   "Debit": "610",
  #                   "Credit": "200",
  #                   "Description": "3",
  #                   "Amount": -1,
  #                   "EffectiveDate": "2018-09-25T00:00:00Z"
  #                 },
  #                 {
  #                   "TaskID": "cc6e25b2-d9ad-434c-8d77-30f36f4cb7ed",
  #                   "TransactionID": "6f278fc1-da3c-4bf0-9e13-31d5942b97c3",
  #                   "Debit": "610",
  #                   "Credit": "200",
  #                   "Description": "1",
  #                   "Amount": -2,
  #                   "EffectiveDate": "2018-09-25T00:00:00Z"
  #                 }
  #               ]
  #             }'
  #   post:
  #     security:
  #       - accountID: []
  #         appKey: []
  #     tags:
  #       - Inventory
  #     operationId: createSalePayment
  #     summary: Allows you to create a Sale Payment
  #     parameters:
  #       - $ref: '#/components/parameters/summarizeErrors'
  #     requestBody:
  #       description: a Sale Payment object with properties to create
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/SalePayment'
  #           example: '{
  #             "TaskID": "4733ba69-21c5-48f5-95e5-307aa9889747",
  #             "Type": "Payment",
  #             "Reference": "",
  #             "Amount": 1,
  #             "DatePaid": "2017-11-30T00:00:00Z",
  #             "Account": "718",
  #             "CurrencyRate": 1
  #           }'
  #     responses:
  #       '200':
  #         description: Success - return response of type Sale Payment
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/SalePayment'
  #             example: '{
  #               "SaleID": "916ab4c0-6ccb-4c93-873d-0603859050e4",
  #               "TaskID": "4733ba69-21c5-48f5-95e5-307aa9889747",
  #               "ID": "6d99006a-8965-4548-8743-0268b8130704",
  #               "SaleOrderNumber": "SO-00001",
  #               "InvoiceNumber": "INV-00005",
  #               "CreditNoteNumber": null,
  #               "Type": "Payment",
  #               "Reference": "",
  #               "Amount": 1,
  #               "DatePaid": "2017-11-30T00:00:00Z",
  #               "Account": "718",
  #               "CurrencyRate": 1,
  #               "DateCreated": "2017-11-28T06:10:37.5462677Z",
  #               "CreditID": null
  #             }'
  #       '400':
  #         $ref: '#/components/responses/400Error'
  #   put:
  #     security:
  #       - accountID: []
  #         appKey: []
  #     tags:
  #       - Inventory
  #     operationId: updateSalePayment
  #     summary: Allows you to update a sale payment
  #     parameters:
  #       - $ref: '#/components/parameters/summarizeErrors'
  #     requestBody:
  #       description: a sale payment object with properties to update
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/SalePayment'
  #           example: '{
  #             "ID": "ee093a0c-d177-9728-1df5-628a61a939e4",
  #             "Reference": "",
  #             "Amount": 357,
  #             "DatePaid": "2017-11-30T00:00:00Z",
  #             "Account": "718",
  #             "CurrencyRate": 1,
  #           }'
  #     responses:
  #       '200':
  #         description: Success - return response of type Sale Payment
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/SalePayment'
  #             example: '{
  #               "SaleID": "916ab4c0-6ccb-4c93-873d-0603859050e4",
  #               "TaskID": "4733ba69-21c5-48f5-95e5-307aa9889747",
  #               "ID": "ee093a0c-d177-9728-1df5-628a61a939e4",
  #               "SaleOrderNumber": "SO-00001",
  #               "InvoiceNumber": "INV-00005",
  #               "CreditNoteNumber": null,
  #               "Type": "Payment",
  #               "Reference": "",
  #               "Amount": 357,
  #               "DatePaid": "2017-11-30T00:00:00Z",
  #               "Account": "718",
  #               "CurrencyRate": 1,
  #               "DateCreated": "2017-11-28T05:08:30.6407568Z",
  #               "CreditID": null
  #             }'
  #       '400':
  #         $ref: '#/components/responses/400Error'
  #   delete:
  #     security:
  #       - accountID: []
  #         appKey: []
  #     tags:
  #       - Inventory
  #     operationId: deleteSalePayment
  #     summary: Allows you to delete a sale payment
  #     parameters:
  #       - $ref: '#/components/parameters/id'
  #     responses:
  #       '200':
  #         description: Success - delete existing sale payment
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Success'
  #             example: '{
  #               "Success": true
  #             }'
  #       '400':
  #         $ref: '#/components/responses/400Error'
  /sale/invoice:
    get:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: getSaleInvoices
      summary: Allows you to retrieve the sale invoices
      parameters:
        - $ref: '#/components/parameters/saleId'
        - $ref: '#/components/parameters/combineAdditionalCharges'
        - $ref: '#/components/parameters/includeProductInfo'
      responses:
        '200':
          description: Success - Returns Invoice info of a particular sale
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleInvoices'
              example: '{
                "SaleID": "916ab4c0-6ccb-4c93-873d-0603859050e4",
                "Invoices": [
                  {
                    "TaskID": "b039f19e-66f8-4309-a4b1-abf928303c88",
                    "CombineAdditionalCharges": false,
                    "InvoiceNumber": "INV-00001",
                    "Memo": "",
                    "Status": "DRAFT",
                    "InvoiceDate": "2017-11-22T00:00:00Z",
                    "InvoiceDueDate": "2017-12-22T00:00:00Z",
                    "CurrencyConversionRate": 1,
                    "BillingAddressLine1": "3 Park Street Industrial Village Southbank",
                    "BillingAddressLine2": "Melbourne VIC 3331",
                    "LinkedFulfillmentNumber": "1",
                    "Lines": [
                      {
                        "ProductID": "4aadd8f6-4d3d-46ca-acbb-1a9a662f9bc1",
                        "SKU": "Bread",
                        "Name": "Baked Bread",
                        "Quantity": 1,
                        "Price": 8,
                        "Discount": 0,
                        "Tax": 0,
                        "Total": 8,
                        "AverageCost": 5,
                        "TaxRule": "Tax on Sales",
                        "Account": "200",
                        "Comment": ""
                      }
                    ],
                    "AdditionalCharges": [
                      {
                        "Description": "Desktop/network support via phone. Per month fixed fee for minimum 20 hours/month.",
                        "Quantity": 1,
                        "Price": 350,
                        "Discount": 0,
                        "Tax": 0,
                        "Total": 350,
                        "TaxRule": "Tax on Sales",
                        "Account": "200",
                        "Comment": ""
                      }
                    ]
                  }
                ]
              }'
    post:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: createSaleInvoice
      summary: Allows you to create a sale invoice
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      requestBody:
        description: a Sale Invoice object with properties to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaleInvoicePost'
            example: '{
              "SaleID": "916ab4c0-6ccb-4c93-873d-0603859050e4",
              "TaskID": "b039f19e-66f8-4309-a4b1-abf928303c88",
              "CombineAdditionalCharges": false,
              "Memo": "",
              "Status": "DRAFT",
              "InvoiceDate": "2017-11-22T00:00:00Z",
              "InvoiceDueDate": "2017-12-22T00:00:00Z",
              "CurrencyConversionRate": 1,
              "BillingAddressLine1": "3 Park Street Industrial Village Southbank",
              "BillingAddressLine2": "Melbourne VIC 3331",
              "LinkedFulfillmentNumber": "1",
              "Lines": [
                {
                  "ProductID": "4aadd8f6-4d3d-46ca-acbb-1a9a662f9bc1",
                  "SKU": "Bread",
                  "Name": "Baked Bread",
                  "Quantity": 1,
                  "Price": 8,
                  "Discount": 0,
                  "Tax": 0,
                  "Total": 8,
                  "AverageCost": 5,
                  "TaxRule": "Tax on Sales",
                  "Account": "200",
                  "Comment": ""
                }
              ],
              "AdditionalCharges": [
                {
                  "Description": "Desktop/network support via phone. Per month fixed fee for minimum 20 hours/month.",
                  "Quantity": 1,
                  "Price": 350,
                  "Discount": 0,
                  "Tax": 0,
                  "Total": 350,
                  "TaxRule": "Tax on Sales",
                  "Account": "200",
                  "Comment": ""
                }
              ]
            }'
      responses:
        '200':
          description: Success - return response of type Sale Invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleInvoices'
              example: '{
                "SaleID": "916ab4c0-6ccb-4c93-873d-0603859050e4",
                "Invoices": [
                  {
                    "TaskID": "b039f19e-66f8-4309-a4b1-abf928303c88",
                    "CombineAdditionalCharges": false,
                    "InvoiceNumber": "INV-00001",
                    "Memo": "",
                    "Status": "DRAFT",
                    "InvoiceDate": "2017-11-22T00:00:00Z",
                    "InvoiceDueDate": "2017-12-22T00:00:00Z",
                    "CurrencyConversionRate": 1,
                    "BillingAddressLine1": "3 Park Street Industrial Village Southbank",
                    "BillingAddressLine2": "Melbourne VIC 3331",
                    "LinkedFulfillmentNumber": "1",
                    "Lines": [
                      {
                        "ProductID": "4aadd8f6-4d3d-46ca-acbb-1a9a662f9bc1",
                        "SKU": "Bread",
                        "Name": "Baked Bread",
                        "Quantity": 1,
                        "Price": 8,
                        "Discount": 0,
                        "Tax": 0,
                        "Total": 8,
                        "AverageCost": 5,
                        "TaxRule": "Tax on Sales",
                        "Account": "200",
                        "Comment": ""
                      }
                    ],
                    "AdditionalCharges": [
                      {
                        "Description": "Desktop/network support via phone. Per month fixed fee for minimum 20 hours/month.",
                        "Quantity": 1,
                        "Price": 350,
                        "Discount": 0,
                        "Tax": 0,
                        "Total": 350,
                        "TaxRule": "Tax on Sales",
                        "Account": "200",
                        "Comment": ""
                      }
                    ]
                  }
                ]
              }'
        '400':
          $ref: '#/components/responses/400Error'
    delete:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: deleteSaleInvoice
      summary: Allows you to delete a sale invoice
      parameters:
        - $ref: '#/components/parameters/taskID'
        - $ref: '#/components/parameters/void'
      responses:
        '200':
          description: Success - delete existing sale invoice and return response of type Sale Invoices array with deleted Sale Invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleInvoices'
              example: '{
                "SaleID": "b039f19e-66f8-4309-a4b1-abf928303c88",
                "Invoices": [
                  {
                    "TaskID": "b039f19e-66f8-4309-a4b1-abf928303c88",
                    "CombineAdditionalCharges": false,
                    "InvoiceNumber": "INV-00001",
                    "Memo": "",
                    "Status": "VOIDED",
                    "InvoiceDate": "2017-11-22T00:00:00Z",
                    "InvoiceDueDate": "2017-12-22T00:00:00Z",
                    "CurrencyConversionRate": 1,
                    "BillingAddressLine1": "3 Park Street Industrial Village Southbank",
                    "BillingAddressLine2": "Melbourne VIC 3331",
                    "LinkedFulfillmentNumber": "1",
                    "Lines": [],
                    "AdditionalCharges": []
                  }
                ]
              }'
        '400':
          $ref: '#/components/responses/400Error'
  /sale/order:
    get:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: getSaleOrder
      summary: Allows you to retrieve the Sale Order
      parameters:
        - $ref: '#/components/parameters/saleId'
        - $ref: '#/components/parameters/combineAdditionalCharges'
        - $ref: '#/components/parameters/includeProductInfo'
      responses:
        '200':
          description: Success - Returns Sale Order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleOrder'
              example: '{
                "SaleID": "916ab4c0-6ccb-4c93-873d-0603859050e4",
                "SaleOrderNumber": "SO-00001",
                "Memo": "",
                "Status": "DRAFT",
                "Lines": [
                  {
                    "ProductID": "4aadd8f6-4d3d-46ca-acbb-1a9a662f9bc1",
                    "SKU": "Bread",
                    "Name": "Baked Bread",
                    "Quantity": 1,
                    "Price": 8,
                    "Discount": 0,
                    "Tax": 0,
                    "AverageCost": 5,
                    "TaxRule": "Tax on Sales",
                    "Comment": "",
                    "DropShip": false,
                    "BackorderQuantity": 0,
                    "Total": 8
                  }
                ],
                "AdditionalCharges": [
                  {
                    "Description": "Desktop/network support via phone. Per month fixed fee for minimum 20 hours/month.",
                    "Price": 350,
                    "Quantity": 1,
                    "Discount": 0,
                    "Tax": 0,
                    "Total": 350,
                    "TaxRule": "Tax on Sales",
                    "Comment": ""
                  }
                ],
                "TotalBeforeTax": 358,
                "Tax": 0,
                "Total": 358
              }'
    post:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: createSaleOrder
      summary: Allows you to create a Sale Order
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      requestBody:
        description: a Sale Order object with properties to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaleOrder'
            example: '{
              "SaleID": "916ab4c0-6ccb-4c93-873d-0603859050e4",
              "Memo": "",
              "Status": "DRAFT",
              "AutoPickPackShipMode": "NOPICK",
              "Lines": [
                {
                  "ProductID": "4aadd8f6-4d3d-46ca-acbb-1a9a662f9bc1",
                  "SKU": "Bread",
                  "Name": "Baked Bread",
                  "Quantity": 1,
                  "Price": 8,
                  "Discount": 0,
                  "Tax": 0,
                  "AverageCost": 5,
                  "TaxRule": "Tax on Sales",
                  "Comment": "",
                  "DropShip": false,
                  "BackorderQuantity": 0,
                  "Total": 8
                }
              ],
              "AdditionalCharges": [
                {
                  "Description": "Desktop/network support via phone. Per month fixed fee for minimum 20 hours/month.",
                  "Price": 350,
                  "Quantity": 1,
                  "Discount": 0,
                  "Tax": 0,
                  "Total": 350,
                  "TaxRule": "Tax on Sales",
                  "Comment": ""
                }
              ],
              "TotalBeforeTax": 358,
              "Tax": 0,
              "Total": 358
            }'
      responses:
        '200':
          description: Success - return response of type Sale Order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleOrder'
              example: '{
                "SaleID": "916ab4c0-6ccb-4c93-873d-0603859050e4",
                "SaleOrderNumber": "SO-00001",
                "Memo": "",
                "Status": "DRAFT",
                "Lines": [
                  {
                    "ProductID": "4aadd8f6-4d3d-46ca-acbb-1a9a662f9bc1",
                    "SKU": "Bread",
                    "Name": "Baked Bread",
                    "Quantity": 1,
                    "Price": 8,
                    "Discount": 0,
                    "Tax": 0,
                    "AverageCost": 5,
                    "TaxRule": "Tax on Sales",
                    "Comment": "",
                    "DropShip": false,
                    "BackorderQuantity": 0,
                    "Total": 8
                  }
                ],
                "AdditionalCharges": [
                  {
                    "Description": "Desktop/network support via phone. Per month fixed fee for minimum 20 hours/month.",
                    "Price": 350,
                    "Quantity": 1,
                    "Discount": 0,
                    "Tax": 0,
                    "Total": 350,
                    "TaxRule": "Tax on Sales",
                    "Comment": ""
                  }
                ],
                "TotalBeforeTax": 358,
                "Tax": 0,
                "Total": 358
              }'
        '400':
          $ref: '#/components/responses/400Error'
  /sale/payment:
    get:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: getSalePayment
      summary: Allows you to retrieve the Sale Payments
      parameters:
        - $ref: '#/components/parameters/saleId'
      responses:
        '200':
          description: Success - Returns Sale Payments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalePayments'
              example: '[
                {
                  "SaleID": "916ab4c0-6ccb-4c93-873d-0603859050e4",
                  "TaskID": "4733ba69-21c5-48f5-95e5-307aa9889747",
                  "ID": "ee093a0c-d177-9728-1df5-628a61a939e4",
                  "SaleOrderNumber": "SO-00001",
                  "InvoiceNumber": "INV-00005",
                  "CreditNoteNumber": null,
                  "Type": "Payment",
                  "Reference": "",
                  "Amount": 358,
                  "DatePaid": "2017-11-30T00:00:00Z",
                  "Account": "718",
                  "CurrencyRate": 1,
                  "DateCreated": "2017-11-28T05:08:30.6407568Z",
                  "CreditID": null
                },
                {
                  "SaleID": "916ab4c0-6ccb-4c93-873d-0603859050e4",
                  "TaskID": "529511e7-6ed6-4a99-a2a7-fab1d32198eb",
                  "ID": "bbd45356-8aeb-6108-bd9c-a5e23162d209",
                  "SaleOrderNumber": "SO-00001",
                  "InvoiceNumber": null,
                  "CreditNoteNumber": "CR-00004",
                  "Type": "Refund",
                  "Reference": "",
                  "Amount": 358,
                  "DatePaid": "2017-11-21T00:00:00Z",
                  "Account": "718",
                  "CurrencyRate": 1,
                  "DateCreated": "2017-11-28T04:53:43.9825081Z",
                  "CreditID": null
                }
              ]'
    post:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: createSalePayment
      summary: Allows you to create a Sale Payment
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      requestBody:
        description: a Sale Payment object with properties to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalePayment'
            example: '{
              "TaskID": "4733ba69-21c5-48f5-95e5-307aa9889747",
              "Type": "Payment",
              "Reference": "",
              "Amount": 1,
              "DatePaid": "2017-11-30T00:00:00Z",
              "Account": "718",
              "CurrencyRate": 1
            }'
      responses:
        '200':
          description: Success - return response of type Sale Payment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalePayment'
              example: '{
                "SaleID": "916ab4c0-6ccb-4c93-873d-0603859050e4",
                "TaskID": "4733ba69-21c5-48f5-95e5-307aa9889747",
                "ID": "6d99006a-8965-4548-8743-0268b8130704",
                "SaleOrderNumber": "SO-00001",
                "InvoiceNumber": "INV-00005",
                "CreditNoteNumber": null,
                "Type": "Payment",
                "Reference": "",
                "Amount": 1,
                "DatePaid": "2017-11-30T00:00:00Z",
                "Account": "718",
                "CurrencyRate": 1,
                "DateCreated": "2017-11-28T06:10:37.5462677Z",
                "CreditID": null
              }'
        '400':
          $ref: '#/components/responses/400Error'
    put:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: updateSalePayment
      summary: Allows you to update a sale payment
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      requestBody:
        description: a sale payment object with properties to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalePayment'
            example: '{
              "ID": "ee093a0c-d177-9728-1df5-628a61a939e4",
              "Reference": "",
              "Amount": 357,
              "DatePaid": "2017-11-30T00:00:00Z",
              "Account": "718",
              "CurrencyRate": 1,
            }'
      responses:
        '200':
          description: Success - return response of type Sale Payment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalePayment'
              example: '{
                "SaleID": "916ab4c0-6ccb-4c93-873d-0603859050e4",
                "TaskID": "4733ba69-21c5-48f5-95e5-307aa9889747",
                "ID": "ee093a0c-d177-9728-1df5-628a61a939e4",
                "SaleOrderNumber": "SO-00001",
                "InvoiceNumber": "INV-00005",
                "CreditNoteNumber": null,
                "Type": "Payment",
                "Reference": "",
                "Amount": 357,
                "DatePaid": "2017-11-30T00:00:00Z",
                "Account": "718",
                "CurrencyRate": 1,
                "DateCreated": "2017-11-28T05:08:30.6407568Z",
                "CreditID": null
              }'
        '400':
          $ref: '#/components/responses/400Error'
    delete:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: deleteSalePayment
      summary: Allows you to delete a sale payment
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Success - delete existing sale payment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
              example: '{
                "Success": true
              }'
        '400':
          $ref: '#/components/responses/400Error'
  /sale/quote:
    get:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: getSaleQuote
      summary: Allows you to retrieve the Sale Quote
      parameters:
        - $ref: '#/components/parameters/saleId'
        - $ref: '#/components/parameters/combineAdditionalCharges'
        - $ref: '#/components/parameters/includeProductInfo'
      responses:
        '200':
          description: Success - Returns Sale Quote
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleQuote'
              example: '{
                "SaleID": "916ab4c0-6ccb-4c93-873d-0603859050e4",
                "CombineAdditionalCharges": false,
                "Memo": "",
                "Status": "AUTHORISED",
                "Lines": [
                  {
                    "ProductID": "4aadd8f6-4d3d-46ca-acbb-1a9a662f9bc1",
                    "SKU": "Bread",
                    "Name": "Baked Bread",
                    "Quantity": 1,
                    "Price": 8,
                    "Discount": 0,
                    "Tax": 0,
                    "AverageCost": 5,
                    "TaxRule": "Tax on Sales",
                    "Comment": "",
                    "Total": 8
                  }
                ],
                "AdditionalCharges": [
                  {
                    "Description": "Desktop/network support via phone. Per month fixed fee for minimum 20 hours/month.",
                    "Price": 350,
                    "Quantity": 1,
                    "Discount": 0,
                    "Tax": 0,
                    "Total": 350,
                    "TaxRule": "Tax on Sales",
                    "Comment": ""
                  }
                ],
                "TotalBeforeTax": 358,
                "Tax": 0,
                "Total": 358
              }'
    post:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: createSaleQuote
      summary: Allows you to create a Sale Quote
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      requestBody:
        description: a Sale Quote object with properties to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaleQuote'
            example: '{
              "SaleID": "916ab4c0-6ccb-4c93-873d-0603859050e4",
              "CombineAdditionalCharges": false,
              "Memo": "",
              "Status": "AUTHORISED",
              "Prepayments": [],
              "Lines": [
                {
                  "ProductID": "4aadd8f6-4d3d-46ca-acbb-1a9a662f9bc1",
                  "SKU": "Bread",
                  "Name": "Baked Bread",
                  "Quantity": 1,
                  "Price": 8,
                  "Discount": 0,
                  "Tax": 0,
                  "AverageCost": 5,
                  "TaxRule": "Tax on Sales",
                  "Comment": "",
                  "Total": 8
                }
              ],
              "AdditionalCharges": [
                {
                  "Description": "Desktop/network support via phone. Per month fixed fee for minimum 20 hours/month.",
                  "Price": 350,
                  "Quantity": 1,
                  "Discount": 0,
                  "Tax": 0,
                  "Total": 350,
                  "TaxRule": "Tax on Sales",
                  "Comment": ""
                }
              ]
            }'
      responses:
        '200':
          description: Success - return response of type Sale Quote
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleQuote'
              example: '{
                "SaleID": "916ab4c0-6ccb-4c93-873d-0603859050e4",
                "CombineAdditionalCharges": false,
                "Memo": "",
                "Status": "AUTHORISED",
                "Lines": [
                  {
                    "ProductID": "4aadd8f6-4d3d-46ca-acbb-1a9a662f9bc1",
                    "SKU": "Bread",
                    "Name": "Baked Bread",
                    "Quantity": 1,
                    "Price": 8,
                    "Discount": 0,
                    "Tax": 0,
                    "AverageCost": 5,
                    "TaxRule": "Tax on Sales",
                    "Comment": "",
                    "Total": 8
                  }
                ],
                "AdditionalCharges": [
                  {
                    "Description": "Desktop/network support via phone. Per month fixed fee for minimum 20 hours/month.",
                    "Price": 350,
                    "Quantity": 1,
                    "Discount": 0,
                    "Tax": 0,
                    "Total": 350,
                    "TaxRule": "Tax on Sales",
                    "Comment": ""
                  }
                ],
                "TotalBeforeTax": 358,
                "Tax": 0,
                "Total": 358
              }'
        '400':
          $ref: '#/components/responses/400Error'
  /webhooks:
    get:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: getWebhooks
      summary: Allows you to retrieve the Webhooks
      responses:
        '200':
          description: Success - Returns Webhooks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhooks'
              example: '{
                "Webhooks": [
                  {
                    "ID": "0bd90aa9-72f9-4f9c-bb0d-9f7cc406b07a",
                    "Type": "Sale/OrderAuthorised",
                    "Name": "Sale order has been authorised",
                    "IsActive": false,
                    "ExternalURL": "https://hookb.in/Zn8950P7",
                    "ExternalAuthorizationType": "basicauth",
                    "ExternalUserName": "Hello",
                    "ExternalPassword": "123",
                    "ExternalBearerToken": "",
                    "ExternalHeaders": [
                      {
                        "Key": "Key",
                        "Value": "123"
                      },
                      {
                        "Key": "6",
                        "Value": "0"
                      }
                    ]
                  }
                ]
              }'
    post:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: createWebhooks
      summary: Allows you to create a Webhook
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      requestBody:
        description: a webhook object with properties to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook'
            example: '{
              "Type": "Sale/OrderAuthorised",
              "IsActive": true,
              "ExternalURL": "https://hookb.in/Zn8950P7",
              "ExternalAuthorizationType": "basicauth",
              "ExternalUserName": "Hello",
              "ExternalPassword": "123",
              "ExternalBearerToken": "",
              "ExternalHeaders": [
                {
                  "Key": "Key",
                  "Value": "123"
                },
                {
                  "Key": "6",
                  "Value": "0"
                }
              ]
            }'
      responses:
        '200':
          description: Success - return response of type Webhooks array with newly created Webhook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhooks'
              example: '{
                "Webhooks": [
                  {
                    "ID": "1cf8cb83-bf39-494b-87f9-1252b684d6d5",
                    "Type": "Sale/OrderAuthorised",
                    "Name": "Sale order has been authorised",
                    "IsActive": true,
                    "ExternalURL": "https://hookb.in/Zn8950P7",
                    "ExternalAuthorizationType": "basicauth",
                    "ExternalUserName": "Hello",
                    "ExternalPassword": "123",
                    "ExternalBearerToken": null,
                    "ExternalHeaders": [
                      {
                        "Key": "Key",
                        "Value": "123"
                      },
                      {
                        "Key": "6",
                        "Value": "0"
                      }
                    ]
                  }
                ]
              }'
        '400':
          $ref: '#/components/responses/400Error'
    put:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: updateWebhook
      summary: Allows you to update a webhook
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      requestBody:
        description: a webhook object with properties to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook'
            example: '{
              "ID": "1cf8cb83-bf39-494b-87f9-1252b684d6d5",
              "Type": "Sale/OrderAuthorised",
              "Name": "Sale order has been authorised",
              "IsActive": true,
              "ExternalURL": "https://hookb.in/Zn8950P7",
              "ExternalAuthorizationType": "basicauth",
              "ExternalUserName": "Hello",
              "ExternalPassword": "123",
              "ExternalBearerToken": null,
              "ExternalHeaders": [
                {
                  "Key": "Key",
                  "Value": "123"
                },
                {
                  "Key": "6",
                  "Value": "0"
                },
                {
                  "Key": "New Key",
                  "Value": "New Value"
                }
              ]
            }'
      responses:
        '200':
          description: Success - return response of type Webhooks array with updated Webhook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhooks'
              example: '{
                "Webhooks": [
                  {
                    "ID": "1cf8cb83-bf39-494b-87f9-1252b684d6d5",
                    "Type": "Sale/OrderAuthorised",
                    "Name": "Sale order has been authorised",
                    "IsActive": true,
                    "ExternalURL": "https://hookb.in/Zn8950P7",
                    "ExternalAuthorizationType": "basicauth",
                    "ExternalUserName": "Hello",
                    "ExternalPassword": "123",
                    "ExternalBearerToken": null,
                    "ExternalHeaders": [
                      {
                        "Key": "Key",
                        "Value": "123"
                      },
                      {
                        "Key": "6",
                        "Value": "0"
                      },
                      {
                        "Key": "New Key",
                        "Value": "New Value"
                      }
                    ]
                  }
                ]
              }'
        '400':
          $ref: '#/components/responses/400Error'
    delete:
      security:
        - accountID: []
          appKey: []
      tags:
        - Inventory
      operationId: deleteWebhook
      summary: Allows you to delete a webhook
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Success - delete existing webhook and return response of type Webhooks array with deleted Webhook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhooks'
              example: '{
                "Webhooks": []
              }'
        '400':
          $ref: '#/components/responses/400Error'
components:
  securitySchemes:
    accountID:
      type: apiKey
      in: header
      name: api-auth-accountid
    appKey:
      type: apiKey
      in: header
      name: api-auth-applicationkey
  parameters:
    page:
      in: query
      name: Page
      description: Default is 1
      example: 1
      schema:
        type: string
        default: 1
    limit:
      in: query
      name: Limit
      description: Default is 100
      example: 100
      schema:
        type: string
        default: 100
    id:
      in: query
      name: ID
      description: Default is nil
      schema:
        type: string
        nullable: true
    name:
      in: query
      name: Name
      description: Default is nil
      schema:
        type: string
        nullable: true
    class:
      in: query
      name: Class
      description: Default is nil
      schema:
        type: string
        nullable: true
    modifiedSince:
      in: query
      name: ModifiedSince
      description: Default is nil
      schema:
        type: string
        nullable: true
    includeDeprecated:
      in: query
      name: IncludeDeprecated
      description: Default is false
      example: false
      schema:
        type: string
        default: false
    method:
      in: query
      name: Method
      description: Default is nil
      schema:
        type: string
        nullable: true
    isActive:
      in: query
      name: IsActive
      description: Default is nil
      schema:
        type: boolean
        nullable: true
    isDefault:
      in: query
      name: IsDefault
      description: Default is nil
      schema:
        type: boolean
        nullable: true
    isTaxForSale:
      in: query
      name: IsTaxForSale
      description: Default is nil
      schema:
        type: boolean
        nullable: true
    isTaxForPurchase:
      in: query
      name: IsTaxForPurchase
      description: Default is nil
      schema:
        type: boolean
        nullable: true
    account:
      in: query
      name: Account
      description: Default is nil
      schema:
        type: string
        nullable: true
    bank:
      in: query
      name: Bank
      description: Default is nil
      schema:
        type: string
        nullable: true
    code:
      in: query
      name: Code
      description: Default is nil
      schema:
        type: string
        nullable: true
    type:
      in: query
      name: Type
      description: Default is nil
      schema:
        type: string
        nullable: true
    status:
      in: query
      name: Status
      description: Default is nil
      schema:
        type: string
        nullable: true
    summarizeErrors:
      in: query
      name: summarizeErrors
      description: If false return 200 OK and mix of successfully created objects and any with validation errors
      example: false
      schema:
        type: boolean
        default: false
    saleId:
      in: query
      name: SaleID
      description: Unique DEAR Sale ID
      schema:
        type: string
    combineAdditionalCharges:
      in: query
      name: CombineAdditionalCharges
      description: Show additional charges in 'Lines' array
      schema:
        type: boolean
        default: false
    includeProductInfo:
      in: query
      name: IncludeProductInfo
      description: Show all used products in additional array
      schema:
        type: boolean
        default: false
    taskID:
      in: query
      name: ID
      description: Default is nil
      schema:
        type: string
        nullable: true
    void:
      in: query
      name: Void
      description: Default is false
      schema:
        type: boolean
        default: false
    hideInventoryMovements:
      in: query
      name: HideInventoryMovements
      description: Hide inventory movements (Default = false)
      schema:
        type: boolean
        default: false
    includeTransactions:
      in: query
      name: IncludeTransactions
      description: Show related transactions (Default = false)
      schema:
        type: boolean
        default: false
  responses:
    400Error:
      description: A failed request due to validation error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Accounts:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/reference/chart-of-accounts'
      properties:
        Total:
          description: Total
          type: string
        Page:
          description: Page
          type: string
        AccountsList:
          description: Array of Accounts
          type: array
          items:
            $ref: '#/components/schemas/Account'
      type: object
    Account:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#reference/chart-of-accounts'
      properties:
        Code:
          description: Unique code of Account
          maxLength: 50
          type: string
        Name:
          description: Account Name
          maxLength: 256
          type: string
        Type:
          description: Type
          maxLength: 50
          type: string
        Status:
          description: Account status
          maxLength: 50
          type: string
        Description:
          description: Account description
          type: string
        Class:
          description: 'Should be one of the following values: `ASSET`, `LIABILITY`, `EXPENSE`, `EQUITY`, `REVENUE`'
          type: string
        SystemAccount:
          description: SystemAccount
          type: string
        SystemAccountCode:
          description: SystemAccountCode
          type: string
        ForPayments:
          description: Account status
          type: string
        DisplayName:
          description: Account display name. Read-only.
          type: string
        OldCode:
          description: Read-only.
          type: string
        Bank:
          description: Name of the Bank. Only for PUT and POST. Required if Account Type is BANK.
          type: string
        BankAccountNumber:
          description: Bank Account Number. Only for PUT and POST. Required if Account Type is BANK.
          type: string
        BankAccountId:
          description: Bank Account ID to which the Account is linked. Read-only.
          type: string
          format: uuid
        Currency:
          description: Currency. Read-only.
          type: string
      required:
        - Code
        - Name
        - Type
        - Status
      type: object
    Address:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#AddressModel'
      properties:
        DisplayAddressLine1:
          description: Address Line 1 as displayed on Sale form. = Line1 + Line2
          type: string
        DisplayAddressLine2:
          description: Address Line 2 as displayed on Sale form. = City + State/Region + Zip/Postcode + Country
          type: string
        Line1:
          description: Address Line 1
          type: string
        Line2:
          description: Address Line 2
          type: string
        City:
          description: City
          type: string
        State:
          description: State
          type: string
        PostCode:
          description: PostCode
          type: string
        Country:
          description: Country
          type: string
      required:
        - Line1
        - Country
      type: object
    Contact:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#SupplierContactModel'
      properties:
        ID:
          description: If passed in PUT method, entry will be searched by id, found entry will be updated, otherwise created
          type: string
          format: uuid
        Name:
          description: Name of Contact
          maxLength: 256
          type: string
        JobTitle:
          description: Job Title
          type: string
        Phone:
          description: Phone
          maxLength: 50
          type: string
        MobilePhone:
          description: Mobile Phone
          type: string
        Fax:
          description: Fax
          maxLength: 50
          type: string
        Email:
          description: Email
          maxLength: 256
          type: string
        Website:
          description: Website
          maxLength: 256
          type: string
        Comment:
          description: Comment
          maxLength: 256
          type: string
        Default:
          description: Points that Contact is used as default. `false` as default.
          type: boolean
          default: false
        IncludeInEmail:
          description: Points that Contact is included in Email. `false` as default.
          type: boolean
          default: false
      required:
        - Name
      type: object
    CurrencyCode:
      description: 3 letter alpha code for the currency – see list of currency codes
      type: string
    Customers:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#reference/customer'
      properties:
        Total:
          description: Total
          type: string
        Page:
          description: Page
          type: string
        CustomerList:
          description: Array of Customers
          type: array
          items:
            $ref: '#/components/schemas/Customer'
      type: object
    Customer:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#reference/customer'
      properties:
        ID:
          description: Unique Customer ID
          type: string
          format: uuid
        Name:
          description: Name of Customer
          maxLength: 256
          type: string
        Status:
          description: Points that Customer is Active. Available values are Active and Deprecated. Required for POST
          type: string
        Currency:
          description: Currency code of Customer
          type: string
        PaymentTerm:
          description: Payment term
          type: string
        AccountReceivable:
          description: Account receivable code of Customer
          type: string
        RevenueAccount:
          description: Sale account code of Customer
          type: string
        TaxRule:
          description: Tax rule name
          type: string
        PriceTier:
          description: Price tier
          type: string
        Carrier:
          description: Carrier name
          type: string
        SalesRepresentative:
          description: Sales representative
          type: string
        Location:
          description: Location
          type: string
        Discount:
          description: Discount must be between 0% and 100%
          type: number
          format: double
        Comments:
          description: Comments
          maxLength: 2000
          type: string
        TaxNumber:
          description: Tax number
          type: string
        CreditLimit:
          description: Credit limit
          type: number
          format: double
        IsOnCreditHold:
          description: boolean to indicate if a customer is on credit hold
          type: boolean
          default: false
        Tags:
          description: Tags string
          type: string
        AttributeSet:
          description: AttributeSet name
          type: string
        AdditionalAttribute1:
          description: Additional attribute 1 value
          type: string
        AdditionalAttribute2:
          description: Additional attribute 2 value
          type: string
        AdditionalAttribute3:
          description: Additional attribute 3 value
          type: string
        AdditionalAttribute4:
          description: Additional attribute 4 value
          type: string
        AdditionalAttribute5:
          description: Additional attribute 5 value
          type: string
        AdditionalAttribute6:
          description: Additional attribute 6 value
          type: string
        AdditionalAttribute7:
          description: Additional attribute 7 value
          type: string
        AdditionalAttribute8:
          description: Additional attribute 8 value
          type: string
        AdditionalAttribute9:
          description: Additional attribute 9 value
          type: string
        AdditionalAttribute10:
          description: Additional attribute 10 value
          type: string
        LastModifiedOn:
          description: Date of last modification
          type: string
        Addresses:
          description: List of addresses
          type: array
          items:
            $ref: '#/components/schemas/SupplierCustomerAddress'
        Contacts:
          description: List of contacts
          type: array
          items:
            $ref: '#/components/schemas/Contact'
      required:
        - Name
        - Status
        - Currency
        - PaymentTerm
        - AccountReceivable
        - RevenueAccount
        - TaxRule
      type: object
    DimensionsUnit:
      description: Unit of measure for unit length/width/height
      type: string
    Error:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#introduction/api-status-codes'
      properties:
        ErrorCode:
          description: Exception number
          type: integer
        Exception:
          description: Exception message
          type: string
      type: object
    ExternalHeader:
      properties:
        Key:
          description: Key
          type: string
        Value:
          description: Value
          type: string
      type: object
    Me:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#reference/me'
      properties:
        Company:
          description: Your company name
          type: string
        Currency:
          description: Your company base currency
          type: string
        TimeZone:
          description: Time Zone where your company located
          type: string
        DefaultWeightUnits:
          description: Unit of measure for unit weight. Available Values are values
          $ref: '#/components/schemas/WeightUnit'
        DefaultDimensionsUnits:
          description: Unit of measure for unit length/width/height. Available Values are values
          $ref: '#/components/schemas/DimensionsUnit'
        LockDate:
          description: Financial settings option. Indicates date period start from what you can change transactional data. Formatted in Tenant date format
          type: string
          format: date
        OpeningBalanceDate:
          description: Date of opening balances in the system. Formatted in Tenant date format
          type: string
          format: date
      type: object
    PaymentTerms:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#reference/payment-term'
      properties:
        Total:
          description: Total
          type: string
        Page:
          description: Page
          type: string
        PaymentTermList:
          description: Array of PaymentTerms
          type: array
          items:
            $ref: '#/components/schemas/PaymentTerm'
      type: object
    PaymentTerm:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#reference/payment-term'
      properties:
        ID:
          description: Unique Payment Term ID
          type: string
          format: uuid
        Name:
          description: Name of Payment Term
          maxLength: 256
          type: string
        Duration:
          description: Minimum Payment Term duration in days
          type: string
        Method:
          description: 'Method of Payment Term. Should be one of the following values: `number of days`, `day of next month`, `last day of next month`, `days since the end of the month`'
          type: string
        IsActive:
          description: Points that Payment Term is Active. `True` as default for POST.
          type: boolean
          default: true
        IsDefault:
          description: Points that Payment Term is Default. `False` as default for POST.
          type: boolean
          default: false
      required:
        - Name
      type: object
    PriceTiers:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#reference/price-tiers'
      properties:
        PriceTiers:
          description: Array of PriceTiers
          type: array
          items:
            $ref: '#/components/schemas/PriceTier'
      type: object
    PriceTier:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#reference/price-tiers'
      properties:
        Code:
          description: Code number of Price Tier
          type: integer
        Name:
          description: Price Tier name
          type: string
      type: object
    Taxes:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#reference/tax'
      properties:
        Total:
          description: Total
          type: string
        Page:
          description: Page
          type: string
        TaxRuleList:
          description: Array of Taxes
          type: array
          items:
            $ref: '#/components/schemas/Tax'
      type: object
    Tax:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#reference/tax'
      properties:
        ID:
          description: Unique ID
          type: string
          format: uuid
        Name:
          description: Tax Name
          maxLength: 50
          type: string
        Account:
          description: 'ChartOfAccount Code with Class == `LIABILITY` && Status == `ACTIVE`'
          type: string
        IsActive:
          description: Points that tax is Active
          type: boolean
          default: true
        TaxInclusive:
          description: Points that tax is Inclusive
          type: boolean
          default: true
        TaxPercent:
          description: Tax percentage, should be between 0 and 100. Read-only
          type: number
          format: double
          minimum: 0
          maximum: 100
        IsTaxForSale:
          description: Points that tax is used for Sale
          type: boolean
          default: true
        IsTaxForPurchase:
          description: Points that tax is used for Purchase
          type: boolean
          default: true
        Components:
          description: List of Tax Components
          type: array
          items:
            $ref: '#/components/schemas/TaxComponent'
      required:
        - Name
        - Account
        - IsActive
        - TaxInclusive
      type: object
    TaxComponent:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#TaxComponentModel'
      properties:
        Name:
          description: Name of product. Read-only.
          maxLength: 50
          type: string
        Percent:
          description: Cost. Required if product type is `Service`. Default value = 0.
          type: number
          format: double
          default: 0
          minimum: 0
          maximum: 100
        AccountCode:
          description: ChartOfAccount Code with Class == `LIABILITY` && Status == `ACTIVE`
          type: string
        ComponentOrder:
          description: The order of sequence taxes components.
          type: integer
      required:
        - Name
        - Percent
        - AccountCode
        - ComponentOrder
      type: object
    # Sale:
    #   externalDocs:
    #     url: 'https://dearinventory.docs.apiary.io/reference/sale/sale'
    #   properties:
    #     ID:
    #       description: Unique DEAR Sale ID. Required for PUT
    #       type: string
    #       format: uuid
    #     Customer:
    #       description: Customer name
    #       type: string
    #     CustomerID:
    #       description: Customer identifier
    #       type: string
    #       format: uuid
    #     Contact:
    #       description: Customer Contact name
    #       type: string
    #     Phone:
    #       description: Customer Contact phone
    #       type: string
    #     Email:
    #       description: Customer Contact email
    #       type: string
    #     DefaultAccount:
    #       description: Account code used by default for invoice lines when no revenue account is defined on Product. By default it is equal to Customer Sale account
    #       type: string
    #     SkipQuote:
    #       description: True if there is no quote in the sale
    #       type: boolean
    #     BillingAddress:
    #       $ref: '#/components/schemas/Address'
    #     ShippingAddress:
    #       $ref: '#/components/schemas/ShippingAddress'
    #     ShippingNotes:
    #       description: Shipping Notes
    #       type: string
    #     BaseCurrency:
    #       description: 3 character currency code of Base Currency defined in General Settings on the moment when Sale was created.
    #       type: string
    #     CustomerCurrency:
    #       description: 3 character currency code of customer Currency defined in Customer card at the moment when customer is selected for the Sale.
    #       type: string
    #     TaxRule:
    #       description: Default Tax Rule name selected for Sale
    #       type: string
    #     TaxCalculation:
    #       description: Inclusive or Exclusive
    #       type: string
    #     Terms:
    #       description: Payment terms name
    #       type: string
    #     PriceTier:
    #       description: Price Tier name selected for Sale
    #       type: string
    #     ShipBy:
    #       description: Date when shipment is due
    #       type: string
    #       format: date
    #     Location:
    #       description: Default location to pick stock from
    #       type: string
    #     SaleOrderDate:
    #       description: Date when task was created
    #       type: string
    #       format: date
    #     LastModifiedOn:
    #       description: UTC Time
    #       type: string
    #       format: date
    #     Note:
    #       description: Custom Sale note
    #       type: string
    #     CustomerReference:
    #       description: Reference number used by customer to identify this sale. Could be a purchase order number generated by customer.
    #       type: string
    #     COGSAmount:
    #       description: COGS amount in base currency
    #       type: number
    #     Status:
    #       description: Sale Status, see possible values
    #       type: string
    #     CombinedPickingStatus:
    #       description: Pick status. Possible Values are VOIDED, NOT AVAILABLE, PICKED, PICKING , NOT PICKED , PARTIALLY PICKED
    #       type: string
    #     CombinedPackingStatus:
    #       description: Pack status. Possible Values are VOIDED, NOT AVAILABLE, PACKED, PACKING, NOT PACKED, PARTIALLY PACKED
    #       type: string
    #     CombinedShippingStatus:
    #       description: Ship status. Possible Values are VOIDED, NOT AVAILABLE, SHIPPED, SHIPPING , NOT SHIPPED , PARTIALLY SHIPPED
    #       type: string
    #     FulFilmentStatus:
    #       description: Fulfilment status. Possible Values are FULFILLED, PARTIALLY FULFILLED, NOT AVAILABLE, NOT FULFILLED, VOIDED
    #       type: string
    #     CombinedInvoiceStatus:
    #       description: Invoice status. Possible Values are INVOICED, INVOICED / CREDITED, NOT AVAILABLE, NOT INVOICED, PARTIALLY INVOICED, PARTIALLY INVOICED / CREDITED
    #       type: string
    #     CombinedPaymentStatus:
    #       description: Payment status. Possible Values are NOT REFUNDED, PREPAID, PARTIALLY PAID, UNPAID, PAID, VOIDED
    #       type: string
    #     CombinedTrackingNumbers:
    #       description: Tracking Numbers
    #       type: string
    #     Carrier:
    #       description: Name of Carrier/shipping method
    #       type: string
    #     CurrencyRate:
    #       description: Conversion Rate expressed as number of Base currency units for one Customer currency unit
    #       type: number
    #     SalesRepresentative:
    #       description: Sales representative name
    #       type: string
    #     Type:
    #       description: Type of sale Simple Sale or Advanced Sale, Service Sale
    #       type: string
    #     SourceChannel:
    #       description: Source of the sale. read-only field
    #       type: string
    #     ExternalID:
    #       description: Custom field that is only available in API and allows to set arbitrary value for the sale for later search and any custom logic
    #       type: string
    #     ServiceOnly:
    #       description: true when it is service-only sale
    #       type: string
    #     Quote:
    #       $ref: '#/components/schemas/SaleQuote'
    #       description: Sale Quote
    #     Order:
    #       $ref: '#/components/schemas/SaleOrder'
    #       description: Sale Order
    #     Fulfilments:
    #       description: Sale Fulfilments
    #       type: array
    #       items:
    #         $ref: '#/components/schemas/SaleFulfilment'
    #     Invoices:
    #       description: Sale Invoices
    #       type: array
    #       items:
    #         $ref: '#/components/schemas/SaleInvoice'
    #     CreditNotes:
    #       description: Sale Credit Notes
    #       type: array
    #       items:
    #         $ref: '#/components/schemas/SaleCreditNote'
    #     ManualJournals:
    #       description: Sale Manual Journals
    #       type: array
    #       items:
    #         $ref: '#/components/schemas/SaleManualJournal'
    #     AdditionalAttributes:
    #       description: Sale Additional Attributes
    #       type: array
    #       items:
    #         $ref: '#/components/schemas/AdditionalAttribute'
    #     Attachments:
    #       description: Sale Attachments
    #       type: array
    #       items:
    #         $ref: '#/components/schemas/AttachmentLine'
    #     InventoryMovements:
    #       description: Sale Inventory Movements
    #       type: array
    #       items:
    #         $ref: '#/components/schemas/InventoryMovementLine'
    #     Transactions:
    #       description: Sale Transactions
    #       type: array
    #       items:
    #         $ref: '#/components/schemas/SaleTransactionLine'
    #   required:
    #     - SaleID
    #   type: object
    SaleAdditionalCharge:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#SaleAdditionalChargeModel'
      properties:
        Description:
          description: Name of Service Product referenced by this Line
          type: string
        Price:
          description: Decimal with up to 4 decimal places. Price per unit in Customer currency
          type: number
        Quantity:
          description: Decimal with up to 4 decimal places. Product or service quantity. Minimal value is 1.
          type: number
        Discount:
          description: Decimal with up to 2 decimal places. Discount. Value between 0 and 100. For free items discount is 100. Default value is 0
          type: number
        Tax:
          description: Decimal with up to 4 decimal places. Tax.
          type: number
        Total:
          description: Decimal with up to 4 decimal places. Line Total. For validation
          type: number
        TaxRule:
          description: Line Tax Rule name.
          type: string
        Comment:
          description: Comment
          type: number
      required:
        - Description
        - Price
        - Quantity
        - Tax
        - TaxRule
      type: object
    # SaleCreditNote:
    #   externalDocs:
    #     url: 'https://dearinventory.docs.apiary.io/#SaleCreditNoteModel'
    #   properties:
    #     TaskID:
    #       description: Identifier of sale Invoice task
    #       type: string
    #       format: uuid
    #     CreditNoteInvoiceNumber:
    #       description: Number of Invoice linked to this Credit Note
    #       type: string
    #     Memo:
    #       description: Additional information for Credit Note.
    #       type: string
    #     Status:
    #       description: Credit Note status. Possible Values are NOT AVAILABLE, DRAFT, AUTHORISED, VOIDED. For POST available values are DRAFT, AUTHORISED
    #       type: string
    #     CreditNoteDate:
    #       description: Credit Note Date.
    #       type: string
    #       format: date
    #     CreditNoteNumber:
    #     CreditNoteConversionRate:
    #     Lines:
    #     AdditionalCharges:
    #     Refunds:
    #     Restock:
    #     TotalBeforeTax:
    #     Tax:
    #     Total:
    #   type: object
    # SaleFulfilment:
    #   externalDocs:
    #     url: 'https://dearinventory.docs.apiary.io/#SaleFulfilmentModel'
    #   properties:
    #     TaskID:
    #       description: Identifier of sale fulfilment task
    #       type: string
    #       format: uuid
    #     FulfillmentNumber:
    #       description: Fulfillment Number (auto-generated)
    #       type: integer
    #     LinkedInvoiceNumber:
    #       description: Invoice number linked to this fulfilment
    #       type: string
    #     FulFilmentStatus:
    #       description: Fulfilment status. Possible Values are NOT AVAILABLE, NOT FULFILLED, FULFILLED, PARTIALLY FULFILLED, VOIDED
    #       type: string
    #     Pick:
    #       $ref: '#/components/schemas/SaleFulfilmentPickPack'
    #     Pack:
    #       $ref: '#/components/schemas/SaleFulfilmentPickPack'
    #     Ship:
    #       $ref: '#/components/schemas/SaleFulfilmentShip'
    #   required:
    #     - TaskID
    #     - FulfillmentNumber
    #     - FulFilmentStatus
    #   type: object
    SaleInvoiceAdditionalCharge:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#SaleInvoiceAdditionalChargeModel'
      properties:
        Description:
          description: Name of Service Product referenced by this Line
          type: string
        Quantity:
          description: Product or service quantity. Minimal value is 1.
          type: number
        Price:
          description: Price per unit in Customer currency
          type: number
        Discount:
          description: Discount. Value between 0 and 100. For free items discount is 100. Default value is 0
          type: number
        Tax:
          description: Tax
          type: number
        Total:
          description: Line Total.For validation
          type: number
        TaxRule:
          description: Line Tax Rule name.
          type: string
        Account:
          description: Revenue account
          type: string
        Comment:
          description: Comment
          type: string
      required:
        - Description
        - Quantity
        - Price
        - Tax
        - TaxRule
        - Account
      type: object
    SaleInvoiceLine:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#SaleInvoiceLineModel'
      properties:
        ProductID:
          description: Product identifier referenced by this Line. Required If CombineAdditionalCharges param exist for this endpoint and it have values = false
          type: string
          format: uuid
        SKU:
          description: Product SKU referenced by this Line. Required If CombineAdditionalCharges param exist for this endpoint and it have values = false
          type: string
        Name:
          description: Product Name referenced by this Line
          type: string
        Quantity:
          description: Product or service quantity. Minimal value is 1.
          type: number
        Price:
          description: Price per unit in Customer currency
          type: number
        Discount:
          description: Discount. Value between 0 and 100. For free items discount is 100. Default value is 0
          type: number
        Tax:
          description: Tax
          type: number
        Total:
          description: Line Total. For validation
          type: number
        AverageCost:
          description: Average product cost
          type: number
        TaxRule:
          description: Line Tax Rule name.
          type: string
        Account:
          description: Revenue account
          type: string
        Comment:
          description: Comment for this line
          type: string
      required:
        - Name
        - Quantity
        - Price
      type: object
    SaleInvoices:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#reference/sale/sale-invoice'
      properties:
        SaleID:
          description: Unique DEAR Sale ID
          type: string
        Invoices:
          description: Array of Invoices
          type: array
          items:
            $ref: '#/components/schemas/SaleInvoice'
      required:
        - SaleID
      type: object
    SaleInvoice:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#reference/sale/sale-invoice'
      properties:
        TaskID:
          description: Identifier of sale Invoice task
          type: string
          format: uuid
        CombineAdditionalCharges:
          description: If `true` then `additional charges` lines displayed in `Lines` array
          type: boolean
          default: false
        InvoiceNumber:
          description: Invoice Number (auto-generated)
          type: string
        Memo:
          description: Additional information for Invoice.
          type: string
        Status:
          description: Invoice status. Possible Values are values. For POST available values are DRAFT, AUTHORISED
          type: string
        InvoiceDate:
          description: Invoice Date.
          type: string
        InvoiceDueDate:
          description: Invoice Due Date.
          type: string
        CurrencyConversionRate:
          description: Decimal with up to 4 decimal places
          type: number
        BillingAddressLine1:
          description: Billing Address Line 1
          type: string
        BillingAddressLine2:
          description: Billing Address Line 2
          type: string
        LinkedFulfillmentNumber:
          description: Number of Fulfilment linked to this invoice
          type: integer
        Lines:
          type: array
          items:
            $ref: '#/components/schemas/SaleInvoiceLine'
          default: []
        AdditionalCharges:
          type: array
          items:
            $ref: '#/components/schemas/SaleInvoiceAdditionalCharge'
          default: []
      required:
        - TaskID
        - CombineAdditionalCharges
        - Status
        - InvoiceDate
        - InvoiceDueDate
      type: object
    SaleInvoicePost:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#reference/sale/sale-invoice'
      properties:
        SaleID:
          description: Unique DEAR Sale ID
          type: string
        TaskID:
          description: Identifier of sale Invoice task
          type: string
          format: uuid
        CombineAdditionalCharges:
          description: If `true` then `additional charges` lines displayed in `Lines` array
          type: boolean
          default: false
        Memo:
          description: Additional information for Invoice.
          type: string
        Status:
          description: Invoice status. Possible Values are values. For POST available values are DRAFT, AUTHORISED
          type: string
        InvoiceDate:
          description: Invoice Date.
          type: string
        InvoiceDueDate:
          description: Invoice Due Date.
          type: string
        CurrencyConversionRate:
          description: Decimal with up to 4 decimal places
          type: number
        BillingAddressLine1:
          description: Billing Address Line 1
          type: string
        BillingAddressLine2:
          description: Billing Address Line 2
          type: string
        LinkedFulfillmentNumber:
          description: Number of Fulfilment linked to this invoice
          type: integer
        Lines:
          type: array
          items:
            $ref: '#/components/schemas/SaleInvoiceLine'
          default: []
        AdditionalCharges:
          type: array
          items:
            $ref: '#/components/schemas/SaleInvoiceAdditionalCharge'
          default: []
      required:
        - SaleID
        - TaskID
        - CombineAdditionalCharges
        - Status
        - InvoiceDate
        - InvoiceDueDate
      type: object
    SaleInvoiceDelete:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#reference/sale/sale-invoice'
      properties:
        TaskID:
          description: ID of Sale task to Void or Undo
          type: string
          format: uuid
        Void:
          description: Default false
          type: boolean
          default: false
      required:
        - TaskID
    SaleOrder:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/reference/sale/sale-order'
      properties:
        SaleID:
          description: Unique DEAR Sale ID
          type: string
          format: uuid
        SaleOrderNumber:
          description: Sale Order Number (auto-generated)
          type: string
        CombineAdditionalCharges:
          description: If `true` then `additional charges` lines displayed in `Lines` array
          type: boolean
          default: false
        Memo:
          description: Additional information for Order.
          type: string
        Status:
          description: Order Status. Possible Values are values. For POST only `DRAFT` and `AUTHORISED` values accepted
          type: string
        Lines:
          type: array
          items:
            $ref: '#/components/schemas/SaleOrderLine'
          default: []
        AdditionalCharges:
          type: array
          items:
            $ref: '#/components/schemas/SaleAdditionalCharge'
          default: []
        TotalBeforeTax:
          description: Decimal with up to 4 decimal places. Sum of order lines and additional charges without taxes. Not required for POST.
          type: number
        Tax:
          description: Decimal with up to 4 decimal places. Sum of order lines and additional charges taxes. Not required for POST.
          type: number
        Total:
          description: Decimal with up to 4 decimal places. Sum of order lines and additional charges with taxes. Not required for POST.
          type: number
      required:
        - SaleID
        - CombineAdditionalCharges
        - Memo
        - Status
        - TotalBeforeTax
        - Tax
        - Total
      type: object
    SaleOrderLine:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#SaleOrderLineModel'
      properties:
        ProductID:
          description: Product identifier referenced by this Line. Required If CombineAdditionalCharges param exist for this endpoint and it have values = false
          type: string
        SKU:
          description: Product SKU referenced by this Line. Required If CombineAdditionalCharges param exist for this endpoint and it have values = false
          type: string
        Name:
          description: Product Name referenced by this Line
          type: string
        Quantity:
          description: Product or service quantity. Minimal value is 1.
          type: number
        Price:
          description: Price per unit in Customer currency
          type: number
        Discount:
          description: Discount. Value between 0 and 100. For free items discount is 100. Default value is 0
          type: number
        Tax:
          description: Tax
          type: number
        AverageCost:
          description: Average product cost
          type: number
        TaxRule:
          description: Line Tax Rule name.
          type: string
        Comment:
          description: Comment for this line
          type: string
        DropShip:
          description: Required if product is not a service with “Optional Drop Ship” mode. Otherwise it ignored.
          type: boolean
        BackorderQuantity:
          description: Quantity of the ordered product on backorder. Read Only for POST
          type: number
        Total:
          description: Line Total. For validation
          type: number
      required:
        - Name
        - Quantity
        - Price
      type: object
    SalePayment:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/reference/sale/sale-payment'
      properties:
        SaleID:
          description: Unique DEAR Sale ID
          type: string
          format: uuid
        TaskID:
          description: Unique DEAR Sale Task ID. Available for POST
          type: string
          format: uuid
        ID:
          description: Identifier of payment. Available for PUT
          type: string
          format: uuid
        SaleOrderNumber:
          description: Sale Order Number
          type: string
        InvoiceNumber:
          description: Sale Task Invoice Number
          type: string
        CreditNoteNumber:
          description: Sale Task Credit Note Number
          type: string
        Type:
          description: Available values are PREPAYMENT,PAYMENT,REFUND. Available for POST
          type: string
        Reference:
          description: Payment reference number. Available for POST/PUT
          type: string
        Amount:
          description: Payment amount in customer currency. Available for POST/PUT
          type: number
        DatePaid:
          description: Date when payment has been made. Available for POST/PUT
          type: string
          format: date
        Account:
          description: Account Code of the bank/payment account from Chart of accounts. Available for POST/PUT
          type: string
        CurrencyRate:
          description: Currency Conversion rate expressed as number of Base currency units for one Customer currency unit. Available for POST/PUT
          type: number
        DateCreated:
          description: Date of creation payment record.
          type: string
          format: date
        CreditID:
          description: Id for Sale Credit entry
          type: string
          format: uuid
      type: object
    SalePayments:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#reference/sale/sale-payment'
      description: Array of Sale Payment
      type: array
      items:
        $ref: '#/components/schemas/SalePayment'
    SaleQuote:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/reference/sale/sale-quote'
      properties:
        SaleID:
          description: Unique DEAR Sale ID
          type: string
          format: uuid
        CombineAdditionalCharges:
          description: If `true` then `additional charges` lines displayed in `Lines` array
          type: boolean
          default: false
        Memo:
          description: Additional information for Quote.
          type: string
        Status:
          description: Quote Status. Possible Values are values. For POST only `DRAFT` and `AUTHORISED` values accepted
          type: string
        Lines:
          type: array
          items:
            $ref: '#/components/schemas/SaleQuoteLine'
          default: []
        AdditionalCharges:
          type: array
          items:
            $ref: '#/components/schemas/SaleAdditionalCharge'
          default: []
        TotalBeforeTax:
          description: Decimal with up to 4 decimal places. Sum of quote lines and additional charges without taxes. Not required for POST.
          type: number
        Tax:
          description: Decimal with up to 4 decimal places. Sum of quote lines and additional charges taxes. Not required for POST.
          type: number
        Total:
          description: Decimal with up to 4 decimal places. Sum of quote lines and additional charges with taxes. Not required for POST.
          type: number
      required:
        - SaleID
        - CombineAdditionalCharges
        - Memo
        - Status
        - TotalBeforeTax
        - Tax
        - Total
      type: object
    SaleQuoteLine:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#SaleQuoteLineModel'
      properties:
        ProductID:
          description: Product identifier referenced by this Line. Required If CombineAdditionalCharges param exist for this endpoint and it have values = false
          type: string
        SKU:
          description: Product SKU referenced by this Line. Required If CombineAdditionalCharges param exist for this endpoint and it have values = false
          type: string
        Name:
          description: Product Name referenced by this Line
          type: string
        Quantity:
          description: Product or service quantity. Minimal value is 1.
          type: number
        Price:
          description: Price per unit in Customer currency
          type: number
        Discount:
          description: Discount. Value between 0 and 100. For free items discount is 100. Default value is 0
          type: number
        Tax:
          description: Tax
          type: number
        AverageCost:
          description: Average product cost
          type: number
        TaxRule:
          description: Line Tax Rule name.
          type: string
        Comment:
          description: Comment for this line
          type: string
        Total:
          description: Line Total. For validation
          type: number
      required:
        - Name
        - Quantity
        - Price
      type: object
    ShippingAddress:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#ShippingAddressModel'
      properties:
        DisplayAddressLine1:
          description: Address Line 1 as displayed on Sale form. = Line1 + Line2
          type: string
        DisplayAddressLine2:
          description: Address Line 2 as displayed on Sale form. = City + State/Region + Zip/Postcode + Country
          type: string
        Line1:
          description: Address Line 1
          type: string
        Line2:
          description: Address Line 2
          type: string
        City:
          description: City
          type: string
        State:
          description: State
          type: string
        PostCode:
          description: Post code
          type: string
        Country:
          description: Country
          type: string
        Company:
          description: Company Name
          type: string
        Contact:
          description: Contact
          type: string
        ShipToOther:
          description: If false and Customer's address matching Line 1 not found, than new customer shipping address will be created.
          type: boolean
      required:
        - Line1
        - Country
      type: object
    Success:
      properties:
        Success:
          description: Success
          type: boolean
      type: object
    SupplierCustomerAddress:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/#SupplierAddressModel'
      properties:
        ID:
          description: If passed in PUT method, entry will be searched by id, found entry will be updated, otherwise created
          type: string
          format: uuid
        Line1:
          description: Address Line 1
          maxLength: 256
          type: string
        Line2:
          description: Address Line 2
          maxLength: 256
          type: string
        City:
          description: City / Suburb
          maxLength: 256
          type: string
        State:
          description: State / Province
          maxLength: 256
          type: string
        PostCode:
          description: Zip / PostCode
          maxLength: 20
          type: string
        Country:
          description: Country name
          type: string
        Type:
          description: 'Address Type. Should be one of the following values: `Billing`, `Business` or `Shipping`.'
          type: string
        DefaultForType:
          description: Points that Address is used as default for chosen Type. `false` as default.
          type: boolean
          default: false
      required:
        - Country
        - Type
      type: object
    Webhooks:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/reference/webhooks/webhooks'
      properties:
        Webhooks:
          description: Array of Webhooks
          type: array
          items:
            $ref: '#/components/schemas/Webhook'
      type: object
    Webhook:
      externalDocs:
        url: 'https://dearinventory.docs.apiary.io/reference/webhooks/webhooks'
      properties:
        ID:
          description: Unique ID. Required for PUT
          type: string
          format: uuid
        Type:
          description: Webhook Type. Available values are values
          type: string
        Name:
          description: Webhook Friendly Name. Read-only.
          type: string
        IsActive:
          description: Is webhook active.
          type: boolean
        ExternalURL:
          description: Callback url.
          type: string
        ExternalAuthorizationType:
          description: Authorisation type. Available values are `noauth`, `basicauth` and `bearerauth`
          type: string
        ExternalUserName:
          description: User name. Required if `ExternalAuthorizationType` is `basicauth`
          type: string
        ExternalPassword:
          description: Password. Required if `ExternalAuthorizationType` is `basicauth`
          type: string
        ExternalBearerToken:
          description: Bearer token. Required if `ExternalAuthorizationType` is `bearerauth`
          type: string
        ExternalHeaders:
          description: Additional headers.
          type: array
          default: []
          items:
            $ref: '#/components/schemas/ExternalHeader'
      required:
        - Type
        - IsActive
        - ExternalURL
        - ExternalAuthorizationType
      type: object
    WeightUnit:
      description: Unit of measure for unit weight
      type: string
